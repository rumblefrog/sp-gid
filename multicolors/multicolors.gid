{"functions":[{"name":"CSetPrefix","docStart":596,"docEnd":673,"docs":{"brief":"Add a chat prefix before all chat msg","tags":[{"tag":"","text":"Add a chat prefix before all chat msg"},{"tag":"param:sPrefix","text":"Prefix"}]},"kind":"stock","returnType":"void","arguments":[{"type":"const char[]","name":"sPrefix","decl":"const char[] sPrefix","default":null},{"type":"any...","name":"","decl":"any... ","default":null}]},{"name":"CClearPrefix","docStart":948,"docEnd":1025,"docs":{"brief":"Add a chat prefix before all chat msg","tags":[{"tag":"","text":"Add a chat prefix before all chat msg"},{"tag":"param:sPrefix","text":"Prefix"}]},"kind":"stock","returnType":"void","arguments":[]},{"name":"CPrintToChat","docStart":1080,"docEnd":1332,"docs":{"brief":"Writes a message to a client with the correct stock for the game.","tags":[{"tag":"","text":"Writes a message to a client with the correct stock for the game."},{"tag":"param:client","text":"Client index."},{"tag":"param:message","text":"Message (formatting rules)."},{"tag":"error","text":"If the client is not connected an error will be thrown."}]},"kind":"stock","returnType":"void","arguments":[{"type":"int","name":"client","decl":"int client","default":null},{"type":"const char[]","name":"message","decl":"const char[] message","default":null},{"type":"any...","name":"","decl":"any... ","default":null}]},{"name":"CPrintToChatAll","docStart":1674,"docEnd":1843,"docs":{"brief":"Prints a message to all clients in the chat area.\nSupports color tags.","tags":[{"tag":"","text":"Prints a message to all clients in the chat area.\nSupports color tags."},{"tag":"param:client","text":"Client index."},{"tag":"param:message","text":"Message (formatting rules)"}]},"kind":"stock","returnType":"void","arguments":[{"type":"const char[]","name":"message","decl":"const char[] message","default":null},{"type":"any...","name":"","decl":"any... ","default":null}]},{"name":"CPrintToChatObservers","docStart":2166,"docEnd":2306,"docs":{"brief":"Writes a message to all of a client's observers.","tags":[{"tag":"","text":"Writes a message to all of a client's observers."},{"tag":"param:target","text":"Client index."},{"tag":"param:message","text":"Message (formatting rules)."}]},"kind":"stock","returnType":"void","arguments":[{"type":"int","name":"target","decl":"int target","default":null},{"type":"const char[]","name":"message","decl":"const char[] message","default":null},{"type":"any...","name":"","decl":"any... ","default":null}]},{"name":"CPrintToChatEx","docStart":2926,"docEnd":3216,"docs":{"brief":"Writes a message to a client with the correct stock for the game.","tags":[{"tag":"","text":"Writes a message to a client with the correct stock for the game."},{"tag":"param:client","text":"Client index."},{"tag":"param:author","text":"Author index."},{"tag":"param:message","text":"Message (formatting rules)."},{"tag":"error","text":"If the client is not connected an error will be thrown."}]},"kind":"stock","returnType":"void","arguments":[{"type":"int","name":"client","decl":"int client","default":null},{"type":"int","name":"author","decl":"int author","default":null},{"type":"const char[]","name":"message","decl":"const char[] message","default":null},{"type":"any...","name":"","decl":"any... ","default":null}]},{"name":"CPrintToChatAllEx","docStart":3592,"docEnd":3764,"docs":{"brief":"Writes a message to all clients with the correct stock for the game.","tags":[{"tag":"","text":"Writes a message to all clients with the correct stock for the game."},{"tag":"param:author","text":"Author index."},{"tag":"param:message","text":"Message (formatting rules)."}]},"kind":"stock","returnType":"void","arguments":[{"type":"int","name":"author","decl":"int author","default":null},{"type":"const char[]","name":"message","decl":"const char[] message","default":null},{"type":"any...","name":"","decl":"any... ","default":null}]},{"name":"CPrintToChatObserversEx","docStart":4121,"docEnd":4292,"docs":{"brief":"Writes a message to all of a client's observers with the correct\ngame stock.","tags":[{"tag":"","text":"Writes a message to all of a client's observers with the correct\ngame stock."},{"tag":"param:target","text":"Client index."},{"tag":"param:message","text":"Message (formatting rules)."}]},"kind":"stock","returnType":"void","arguments":[{"type":"int","name":"target","decl":"int target","default":null},{"type":"const char[]","name":"message","decl":"const char[] message","default":null},{"type":"any...","name":"","decl":"any... ","default":null}]},{"name":"CReplyToCommand","docStart":4924,"docEnd":5054,"docs":{"brief":"Replies to a command with colors","tags":[{"tag":"","text":"Replies to a command with colors"},{"tag":"param:client","text":"Client to reply to"},{"tag":"param:message","text":"Message (formatting rules)"}]},"kind":"stock","returnType":"void","arguments":[{"type":"int","name":"author","decl":"int author","default":null},{"type":"const char[]","name":"message","decl":"const char[] message","default":null},{"type":"any...","name":"","decl":"any... ","default":null}]},{"name":"CReplyToCommandEx","docStart":5405,"docEnd":5583,"docs":{"brief":"Replies to a command with colors","tags":[{"tag":"","text":"Replies to a command with colors"},{"tag":"param:client","text":"Client to reply to"},{"tag":"param:author","text":"Client to use for {teamcolor}"},{"tag":"param:message","text":"Message (formatting rules)"}]},"kind":"stock","returnType":"void","arguments":[{"type":"int","name":"client","decl":"int client","default":null},{"type":"int","name":"author","decl":"int author","default":null},{"type":"const char[]","name":"message","decl":"const char[] message","default":null},{"type":"any...","name":"","decl":"any... ","default":null}]},{"name":"CPrintToServer","docStart":5969,"docEnd":6065,"docs":{"brief":"Remove all tags and print to server","tags":[{"tag":"","text":"Remove all tags and print to server"},{"tag":"param:message","text":"Message (formatting rules)"}]},"kind":"stock","returnType":"void","arguments":[{"type":"const char[]","name":"message","decl":"const char[] message","default":null},{"type":"any...","name":"","decl":"any... ","default":null}]},{"name":"CShowActivity","docStart":6485,"docEnd":7050,"docs":{"brief":"Displays usage of an admin command to users depending on the\nsetting of the sm_show_activity cvar.\n\nThis version does not display a message to the originating client\nif used from chat triggers or menus.  If manual replies are used\nfor these cases, then this function will suffice.  Otherwise,\nCShowActivity2() is slightly more useful.\nSupports color tags.","tags":[{"tag":"","text":"Displays usage of an admin command to users depending on the\nsetting of the sm_show_activity cvar.\n\nThis version does not display a message to the originating client\nif used from chat triggers or menus.  If manual replies are used\nfor these cases, then this function will suffice.  Otherwise,\nCShowActivity2() is slightly more useful.\nSupports color tags."},{"tag":"param:client","text":"Client index doing the action, or 0 for server."},{"tag":"param:format","text":"Formatting rules."},{"tag":"param:...","text":"Variable number of format parameters.\n"}]},"kind":"stock","returnType":"void","arguments":[{"type":"int","name":"author","decl":"int author","default":null},{"type":"const char[]","name":"message","decl":"const char[] message","default":null},{"type":"any...","name":"","decl":"any... ","default":null}]},{"name":"CShowActivityEx","docStart":7367,"docEnd":7731,"docs":{"brief":"Same as C_ShowActivity(), except the tag parameter is used instead of \"[SM] \" (note that you must supply any spacing).\nSupports color tags.","tags":[{"tag":"","text":"Same as C_ShowActivity(), except the tag parameter is used instead of \"[SM] \" (note that you must supply any spacing).\nSupports color tags."},{"tag":"param:client","text":"Client index doing the action, or 0 for server."},{"tag":"param:tags","text":"Tag to display with."},{"tag":"param:format","text":"Formatting rules."},{"tag":"param:...","text":"Variable number of format parameters.\n"}]},"kind":"stock","returnType":"void","arguments":[{"type":"int","name":"author","decl":"int author","default":null},{"type":"const char[]","name":"tag","decl":"const char[] tag","default":null},{"type":"const char[]","name":"message","decl":"const char[] message","default":null},{"type":"any...","name":"","decl":"any... ","default":null}]},{"name":"CShowActivity2","docStart":8082,"docEnd":8585,"docs":{"brief":"Displays usage of an admin command to users depending on the setting of the sm_show_activity cvar.\nAll users receive a message in their chat text, except for the originating client,\nwho receives the message based on the current ReplySource.\nSupports color tags.","tags":[{"tag":"","text":"Displays usage of an admin command to users depending on the setting of the sm_show_activity cvar.\nAll users receive a message in their chat text, except for the originating client,\nwho receives the message based on the current ReplySource.\nSupports color tags."},{"tag":"param:client","text":"Client index doing the action, or 0 for server."},{"tag":"param:tags","text":"Tag to prepend to the message."},{"tag":"param:format","text":"Formatting rules."},{"tag":"param:...","text":"Variable number of format parameters.\n"}]},"kind":"stock","returnType":"void","arguments":[{"type":"int","name":"author","decl":"int author","default":null},{"type":"const char[]","name":"tag","decl":"const char[] tag","default":null},{"type":"const char[]","name":"message","decl":"const char[] message","default":null},{"type":"any...","name":"","decl":"any... ","default":null}]},{"name":"CFormatColor","docStart":8934,"docEnd":9089,"docs":{"brief":"Replaces color tags in a string with color codes","tags":[{"tag":"","text":"Replaces color tags in a string with color codes"},{"tag":"param:message","text":"String."},{"tag":"param:maxlength","text":"Maximum length of the string buffer."}]},"kind":"stock","returnType":"void","arguments":[{"type":"char[]","name":"message","decl":"char[] message","default":null},{"type":"int","name":"maxlength","decl":"int maxlength","default":null},{"type":"int","name":"author","decl":"int author","default":"-1"}]},{"name":"CRemoveTags","docStart":9431,"docEnd":9566,"docs":{"brief":"Removes color tags from a message","tags":[{"tag":"","text":"Removes color tags from a message"},{"tag":"param:message","text":"Message to remove tags from"},{"tag":"param:maxlen","text":"Maximum buffer length"}]},"kind":"stock","returnType":"void","arguments":[{"type":"char[]","name":"message","decl":"char[] message","default":null},{"type":"int","name":"maxlen","decl":"int maxlen","default":null}]},{"name":"CFixColors","docStart":9728,"docEnd":9770,"docs":{"brief":"Fixes missing Lightgreen color.","tags":[{"tag":"","text":"Fixes missing Lightgreen color."}]},"kind":"stock","returnType":"void","arguments":[]},{"name":"IsSource2009","docStart":0,"docEnd":0,"docs":null,"kind":"stock","returnType":"bool","arguments":[]}],"methodmaps":[],"enumstructs":[],"constants":[],"enums":[],"typesets":[],"typedefs":[]}