{"functions":[{"name":"JSON_INDENT","docStart":489,"docEnd":540,"docs":{"brief":"Pretty-print the result and indent with n spaces","tags":[{"tag":"","text":"Pretty-print the result and indent with n spaces"}]},"kind":"stock","returnType":"int","arguments":[{"type":"int","name":"n","decl":"int n","default":null}]},{"name":"JSON_REAL_PRECISION","docStart":604,"docEnd":655,"docs":{"brief":"Output floats with at most n digits of precision","tags":[{"tag":"","text":"Output floats with at most n digits of precision"}]},"kind":"stock","returnType":"int","arguments":[{"type":"int","name":"n","decl":"int n","default":null}]}],"methodmaps":[{"name":"JSON","docStart":724,"docEnd":758,"docs":{"brief":"Generic type for encoding JSON.","tags":[{"tag":"","text":"Generic type for encoding JSON."}]},"parent":"Handle","methods":[{"name":"ToFile","docStart":786,"docEnd":990,"docs":{"brief":"Writes the JSON string representation of the object to a file.","tags":[{"tag":"","text":"Writes the JSON string representation of the object to a file."},{"tag":"param:file","text":"File to write to."},{"tag":"param:flags","text":"Encoding flags."},{"tag":"return","text":"True on success, false on failure."}]},"kind":"native","returnType":"bool","arguments":[{"type":"const char[]","name":"file","decl":"const char[] file","default":null},{"type":"int","name":"flags","decl":"int flags","default":"0"}]},{"name":"ToString","docStart":1055,"docEnd":1320,"docs":{"brief":"Retrieves the JSON string representation of the object.","tags":[{"tag":"","text":"Retrieves the JSON string representation of the object."},{"tag":"param:buffer","text":"String buffer to write to."},{"tag":"param:maxlength","text":"Maximum length of the string buffer."},{"tag":"param:flags","text":"Encoding flags."},{"tag":"return","text":"True on success, false on failure."}]},"kind":"native","returnType":"bool","arguments":[{"type":"char[]","name":"buffer","decl":"char[] buffer","default":null},{"type":"int","name":"maxlength","decl":"int maxlength","default":null},{"type":"int","name":"flags","decl":"int flags","default":"0"}]}],"properties":[]},{"name":"JSONObject","docStart":0,"docEnd":0,"docs":null,"parent":"JSON","methods":[{"name":"JSONObject","docStart":1431,"docEnd":1678,"docs":{"brief":"Creates a JSON object. A JSON object maps strings (called \"keys\") to values. Keys in a\nJSON object are unique. That is, there is at most one entry in the map for a given key.\n\nThe JSONObject must be freed via delete or CloseHandle().","tags":[{"tag":"","text":"Creates a JSON object. A JSON object maps strings (called \"keys\") to values. Keys in a\nJSON object are unique. That is, there is at most one entry in the map for a given key.\n\nThe JSONObject must be freed via delete or CloseHandle()."}]},"kind":"native","returnType":"JSONObject","arguments":[]},{"name":"FromFile","docStart":1710,"docEnd":1883,"docs":{"brief":"Loads a JSON object from a file.","tags":[{"tag":"","text":"Loads a JSON object from a file."},{"tag":"param:file","text":"File to read from."},{"tag":"return","text":"Object handle, or null on failure."},{"tag":"error","text":"Invalid JSON."}]},"kind":"native","returnType":"JSONObject","arguments":[{"type":"const char[]","name":"file","decl":"const char[] file","default":null}]},{"name":"FromString","docStart":1948,"docEnd":2148,"docs":{"brief":"Loads a JSON object from a string.","tags":[{"tag":"","text":"Loads a JSON object from a string."},{"tag":"param:buffer","text":"String buffer to load into the JSON object."},{"tag":"return","text":"Object handle, or null on failure."},{"tag":"error","text":"Invalid JSON."}]},"kind":"native","returnType":"JSONObject","arguments":[{"type":"const char[]","name":"buffer","decl":"const char[] buffer","default":null}]},{"name":"Get","docStart":2217,"docEnd":2438,"docs":{"brief":"Retrieves an array or object value from the object.\n\nThe JSON must be freed via delete or CloseHandle().","tags":[{"tag":"","text":"Retrieves an array or object value from the object.\n\nThe JSON must be freed via delete or CloseHandle()."},{"tag":"param:key","text":"Key string."},{"tag":"return","text":"Value read."},{"tag":"error","text":"Invalid key."}]},"kind":"native","returnType":"JSON","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null}]},{"name":"GetBool","docStart":2484,"docEnd":2636,"docs":{"brief":"Retrieves a boolean value from the object.","tags":[{"tag":"","text":"Retrieves a boolean value from the object."},{"tag":"param:key","text":"Key string."},{"tag":"return","text":"Value read."},{"tag":"error","text":"Invalid key."}]},"kind":"native","returnType":"bool","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null}]},{"name":"GetFloat","docStart":2686,"docEnd":2836,"docs":{"brief":"Retrieves a float value from the object.","tags":[{"tag":"","text":"Retrieves a float value from the object."},{"tag":"param:key","text":"Key string."},{"tag":"return","text":"Value read."},{"tag":"error","text":"Invalid key."}]},"kind":"native","returnType":"float","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null}]},{"name":"GetInt","docStart":2888,"docEnd":3041,"docs":{"brief":"Retrieves an integer value from the object.","tags":[{"tag":"","text":"Retrieves an integer value from the object."},{"tag":"param:key","text":"Key string."},{"tag":"return","text":"Value read."},{"tag":"error","text":"Invalid key."}]},"kind":"native","returnType":"int","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null}]},{"name":"GetInt64","docStart":3089,"docEnd":3361,"docs":{"brief":"Retrieves a 64-bit integer value from the object.","tags":[{"tag":"","text":"Retrieves a 64-bit integer value from the object."},{"tag":"param:key","text":"Key string."},{"tag":"param:buffer","text":"String buffer to store value."},{"tag":"param:maxlength","text":"Maximum length of the string buffer."},{"tag":"return","text":"True on success. False if the key was not found."}]},"kind":"native","returnType":"bool","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null},{"type":"char[]","name":"buffer","decl":"char[] buffer","default":null},{"type":"int","name":"maxlength","decl":"int maxlength","default":null}]},{"name":"GetString","docStart":3442,"docEnd":3736,"docs":{"brief":"Retrieves a string value from the object.","tags":[{"tag":"","text":"Retrieves a string value from the object."},{"tag":"param:key","text":"Key string."},{"tag":"param:buffer","text":"String buffer to store value."},{"tag":"param:maxlength","text":"Maximum length of the string buffer."},{"tag":"return","text":"True on success. False if the key was not found, or the value is not a string."}]},"kind":"native","returnType":"bool","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null},{"type":"char[]","name":"buffer","decl":"char[] buffer","default":null},{"type":"int","name":"maxlength","decl":"int maxlength","default":null}]},{"name":"IsNull","docStart":3818,"docEnd":4013,"docs":{"brief":"Returns whether or not a value in the object is null.","tags":[{"tag":"","text":"Returns whether or not a value in the object is null."},{"tag":"param:key","text":"Key string."},{"tag":"return","text":"True if the value is null, false otherwise."},{"tag":"error","text":"Invalid key."}]},"kind":"native","returnType":"bool","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null}]},{"name":"HasKey","docStart":4062,"docEnd":4215,"docs":{"brief":"Returns whether or not a key in the object exists","tags":[{"tag":"","text":"Returns whether or not a key in the object exists"},{"tag":"param:key","text":"Key string."},{"tag":"return","text":"True if the key exists, false otherwise."}]},"kind":"native","returnType":"bool","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null}]},{"name":"Set","docStart":4264,"docEnd":4510,"docs":{"brief":"Sets an array or object value in the object, either inserting a new entry or replacing an old one.","tags":[{"tag":"","text":"Sets an array or object value in the object, either inserting a new entry or replacing an old one."},{"tag":"param:key","text":"Key string."},{"tag":"param:value","text":"Value to store at this key."},{"tag":"return","text":"True on success, false on failure."}]},"kind":"native","returnType":"bool","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null},{"type":"JSON","name":"value","decl":"JSON value","default":null}]},{"name":"SetBool","docStart":4568,"docEnd":4805,"docs":{"brief":"Sets a boolean value in the object, either inserting a new entry or replacing an old one.","tags":[{"tag":"","text":"Sets a boolean value in the object, either inserting a new entry or replacing an old one."},{"tag":"param:key","text":"Key string."},{"tag":"param:value","text":"Value to store at this key."},{"tag":"return","text":"True on success, false on failure."}]},"kind":"native","returnType":"bool","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null},{"type":"bool","name":"value","decl":"bool value","default":null}]},{"name":"SetFloat","docStart":4867,"docEnd":5102,"docs":{"brief":"Sets a float value in the object, either inserting a new entry or replacing an old one.","tags":[{"tag":"","text":"Sets a float value in the object, either inserting a new entry or replacing an old one."},{"tag":"param:key","text":"Key string."},{"tag":"param:value","text":"Value to store at this key."},{"tag":"return","text":"True on success, false on failure."}]},"kind":"native","returnType":"bool","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null},{"type":"float","name":"value","decl":"float value","default":null}]},{"name":"SetInt","docStart":5166,"docEnd":5404,"docs":{"brief":"Sets an integer value in the object, either inserting a new entry or replacing an old one.","tags":[{"tag":"","text":"Sets an integer value in the object, either inserting a new entry or replacing an old one."},{"tag":"param:key","text":"Key string."},{"tag":"param:value","text":"Value to store at this key."},{"tag":"return","text":"True on success, false on failure."}]},"kind":"native","returnType":"bool","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null},{"type":"int","name":"value","decl":"int value","default":null}]},{"name":"SetInt64","docStart":5464,"docEnd":5708,"docs":{"brief":"Sets a 64-bit integer value in the object, either inserting a new entry or replacing an old one.","tags":[{"tag":"","text":"Sets a 64-bit integer value in the object, either inserting a new entry or replacing an old one."},{"tag":"param:key","text":"Key string."},{"tag":"param:value","text":"Value to store at this key."},{"tag":"return","text":"True on success, false on failure."}]},"kind":"native","returnType":"bool","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null},{"type":"const char[]","name":"value","decl":"const char[] value","default":null}]},{"name":"SetNull","docStart":5779,"docEnd":5963,"docs":{"brief":"Sets a null value in the object, either inserting a new entry or replacing an old one.","tags":[{"tag":"","text":"Sets a null value in the object, either inserting a new entry or replacing an old one."},{"tag":"param:key","text":"Key string."},{"tag":"return","text":"True on success, false on failure."}]},"kind":"native","returnType":"bool","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null}]},{"name":"SetString","docStart":6013,"docEnd":6249,"docs":{"brief":"Sets a string value in the object, either inserting a new entry or replacing an old one.","tags":[{"tag":"","text":"Sets a string value in the object, either inserting a new entry or replacing an old one."},{"tag":"param:key","text":"Key string."},{"tag":"param:value","text":"Value to store at this key."},{"tag":"return","text":"True on success, false on failure."}]},"kind":"native","returnType":"bool","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null},{"type":"const char[]","name":"value","decl":"const char[] value","default":null}]},{"name":"Remove","docStart":6321,"docEnd":6466,"docs":{"brief":"Removes an entry from the object.","tags":[{"tag":"","text":"Removes an entry from the object."},{"tag":"param:key","text":"Key string."},{"tag":"return","text":"True on success, false if the key was not found."}]},"kind":"native","returnType":"bool","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null}]},{"name":"Clear","docStart":6515,"docEnd":6608,"docs":{"brief":"Clears the object of all entries.","tags":[{"tag":"","text":"Clears the object of all entries."},{"tag":"return","text":"True on success, false on failure."}]},"kind":"native","returnType":"bool","arguments":[]},{"name":"Keys","docStart":6640,"docEnd":6705,"docs":{"brief":"Returns an iterator for the object's keys. See JSONObjectKeys.","tags":[{"tag":"","text":"Returns an iterator for the object's keys. See JSONObjectKeys."}]},"kind":"native","returnType":"JSONObjectKeys","arguments":[]}],"properties":[{"name":"Size","docStart":6746,"docEnd":6782,"docs":{"brief":"Retrieves the size of the object.","tags":[{"tag":"","text":"Retrieves the size of the object."}]},"type":"int","getter":true,"setter":false}]},{"name":"JSONObjectKeys","docStart":6834,"docEnd":7012,"docs":{"brief":"A JSONObjectKeys is created via JSONObject.Keys(). It allows the keys of an\nobject to be iterated. The JSONObjectKeys must be freed with delete or\nCloseHandle().","tags":[{"tag":"","text":"A JSONObjectKeys is created via JSONObject.Keys(). It allows the keys of an\nobject to be iterated. The JSONObjectKeys must be freed with delete or\nCloseHandle()."}]},"parent":"Handle","methods":[{"name":"ReadKey","docStart":7050,"docEnd":7296,"docs":{"brief":"Reads an object key, then advances to the next key if any.","tags":[{"tag":"","text":"Reads an object key, then advances to the next key if any."},{"tag":"param:buffer","text":"String buffer to store key."},{"tag":"param:maxlength","text":"Maximum length of the string buffer."},{"tag":"return","text":"True on success, false if there are no more keys."}]},"kind":"native","returnType":"bool","arguments":[{"type":"char[]","name":"buffer","decl":"char[] buffer","default":null},{"type":"int","name":"maxlength","decl":"int maxlength","default":null}]}],"properties":[]},{"name":"JSONArray","docStart":0,"docEnd":0,"docs":null,"parent":"JSON","methods":[{"name":"JSONArray","docStart":7390,"docEnd":7479,"docs":{"brief":"Creates a JSON array.\n\nThe JSONArray must be freed via delete or CloseHandle().","tags":[{"tag":"","text":"Creates a JSON array.\n\nThe JSONArray must be freed via delete or CloseHandle()."}]},"kind":"native","returnType":"JSONArray","arguments":[]},{"name":"FromFile","docStart":7510,"docEnd":7681,"docs":{"brief":"Loads a JSON array from a file.","tags":[{"tag":"","text":"Loads a JSON array from a file."},{"tag":"param:file","text":"File to read from."},{"tag":"return","text":"Array handle, or null on failure."},{"tag":"error","text":"Invalid JSON."}]},"kind":"native","returnType":"JSONArray","arguments":[{"type":"const char[]","name":"file","decl":"const char[] file","default":null}]},{"name":"FromString","docStart":7745,"docEnd":7942,"docs":{"brief":"Loads a JSON array from a string.","tags":[{"tag":"","text":"Loads a JSON array from a string."},{"tag":"param:buffer","text":"String buffer to load into the JSON array."},{"tag":"return","text":"Array handle, or null on failure."},{"tag":"error","text":"Invalid JSON."}]},"kind":"native","returnType":"JSONArray","arguments":[{"type":"const char[]","name":"buffer","decl":"const char[] buffer","default":null}]},{"name":"Get","docStart":8010,"docEnd":8240,"docs":{"brief":"Retrieves an array or object value from the array.\n\nThe JSON must be freed via delete or CloseHandle().","tags":[{"tag":"","text":"Retrieves an array or object value from the array.\n\nThe JSON must be freed via delete or CloseHandle()."},{"tag":"param:index","text":"Index in the array."},{"tag":"return","text":"Value read."},{"tag":"error","text":"Invalid index."}]},"kind":"native","returnType":"JSON","arguments":[{"type":"int","name":"index","decl":"int index","default":null}]},{"name":"GetBool","docStart":8279,"docEnd":8440,"docs":{"brief":"Retrieves a boolean value from the array.","tags":[{"tag":"","text":"Retrieves a boolean value from the array."},{"tag":"param:index","text":"Index in the array."},{"tag":"return","text":"Value read."},{"tag":"error","text":"Invalid index."}]},"kind":"native","returnType":"bool","arguments":[{"type":"int","name":"index","decl":"int index","default":null}]},{"name":"GetFloat","docStart":8483,"docEnd":8642,"docs":{"brief":"Retrieves a float value from the array.","tags":[{"tag":"","text":"Retrieves a float value from the array."},{"tag":"param:index","text":"Index in the array."},{"tag":"return","text":"Value read."},{"tag":"error","text":"Invalid index."}]},"kind":"native","returnType":"float","arguments":[{"type":"int","name":"index","decl":"int index","default":null}]},{"name":"GetInt","docStart":8687,"docEnd":8849,"docs":{"brief":"Retrieves an integer value from the array.","tags":[{"tag":"","text":"Retrieves an integer value from the array."},{"tag":"param:index","text":"Index in the array."},{"tag":"return","text":"Value read."},{"tag":"error","text":"Invalid index."}]},"kind":"native","returnType":"int","arguments":[{"type":"int","name":"index","decl":"int index","default":null}]},{"name":"GetInt64","docStart":8890,"docEnd":9188,"docs":{"brief":"Retrieves an 64-bit integer value from the array.","tags":[{"tag":"","text":"Retrieves an 64-bit integer value from the array."},{"tag":"param:index","text":"Index in the array."},{"tag":"param:buffer","text":"Buffer to copy to."},{"tag":"param:maxlength","text":"Maximum size of the buffer."},{"tag":"return","text":"True on success, false if the index out of range."},{"tag":"error","text":"Invalid index."}]},"kind":"native","returnType":"bool","arguments":[{"type":"int","name":"index","decl":"int index","default":null},{"type":"char[]","name":"buffer","decl":"char[] buffer","default":null},{"type":"int","name":"maxlength","decl":"int maxlength","default":null}]},{"name":"GetString","docStart":9262,"docEnd":9554,"docs":{"brief":"Retrieves a string value from the array.","tags":[{"tag":"","text":"Retrieves a string value from the array."},{"tag":"param:index","text":"Index in the array."},{"tag":"param:buffer","text":"Buffer to copy to."},{"tag":"param:maxlength","text":"Maximum size of the buffer."},{"tag":"return","text":"True on success, false if the value is not a string."},{"tag":"error","text":"Invalid index."}]},"kind":"native","returnType":"bool","arguments":[{"type":"int","name":"index","decl":"int index","default":null},{"type":"char[]","name":"buffer","decl":"char[] buffer","default":null},{"type":"int","name":"maxlength","decl":"int maxlength","default":null}]},{"name":"IsNull","docStart":9629,"docEnd":9833,"docs":{"brief":"Returns whether or not a value in the array is null.","tags":[{"tag":"","text":"Returns whether or not a value in the array is null."},{"tag":"param:index","text":"Index in the array."},{"tag":"return","text":"True if the value is null, false otherwise."},{"tag":"error","text":"Invalid index."}]},"kind":"native","returnType":"bool","arguments":[{"type":"int","name":"index","decl":"int index","default":null}]},{"name":"Set","docStart":9875,"docEnd":10060,"docs":{"brief":"Sets an array or object value in the array.","tags":[{"tag":"","text":"Sets an array or object value in the array."},{"tag":"param:index","text":"Index in the array."},{"tag":"param:value","text":"Value to set."},{"tag":"return","text":"True on success, false on failure."}]},"kind":"native","returnType":"bool","arguments":[{"type":"int","name":"index","decl":"int index","default":null},{"type":"JSON","name":"value","decl":"JSON value","default":null}]},{"name":"SetBool","docStart":10111,"docEnd":10287,"docs":{"brief":"Sets a boolean value in the array.","tags":[{"tag":"","text":"Sets a boolean value in the array."},{"tag":"param:index","text":"Index in the array."},{"tag":"param:value","text":"Value to set."},{"tag":"return","text":"True on success, false on failure."}]},"kind":"native","returnType":"bool","arguments":[{"type":"int","name":"index","decl":"int index","default":null},{"type":"bool","name":"value","decl":"bool value","default":null}]},{"name":"SetFloat","docStart":10342,"docEnd":10516,"docs":{"brief":"Sets a float value in the array.","tags":[{"tag":"","text":"Sets a float value in the array."},{"tag":"param:index","text":"Index in the array."},{"tag":"param:value","text":"Value to set."},{"tag":"return","text":"True on success, false on failure."}]},"kind":"native","returnType":"bool","arguments":[{"type":"int","name":"index","decl":"int index","default":null},{"type":"float","name":"value","decl":"float value","default":null}]},{"name":"SetInt","docStart":10573,"docEnd":10750,"docs":{"brief":"Sets an integer value in the array.","tags":[{"tag":"","text":"Sets an integer value in the array."},{"tag":"param:index","text":"Index in the array."},{"tag":"param:value","text":"Value to set."},{"tag":"return","text":"True on success, false on failure."}]},"kind":"native","returnType":"bool","arguments":[{"type":"int","name":"index","decl":"int index","default":null},{"type":"int","name":"value","decl":"int value","default":null}]},{"name":"SetInt64","docStart":10803,"docEnd":11001,"docs":{"brief":"Sets a 64 bit integer value in the array.","tags":[{"tag":"","text":"Sets a 64 bit integer value in the array."},{"tag":"param:index","text":"Index in the array."},{"tag":"param:value","text":"64-bit integer value to set."},{"tag":"return","text":"True on success, false on failure."}]},"kind":"native","returnType":"bool","arguments":[{"type":"int","name":"index","decl":"int index","default":null},{"type":"const char[]","name":"value","decl":"const char[] value","default":null}]},{"name":"SetNull","docStart":11065,"docEnd":11202,"docs":{"brief":"Sets a null value in the array.","tags":[{"tag":"","text":"Sets a null value in the array."},{"tag":"param:index","text":"Index in the array."},{"tag":"return","text":"True on success, false on failure."}]},"kind":"native","returnType":"bool","arguments":[{"type":"int","name":"index","decl":"int index","default":null}]},{"name":"SetString","docStart":11245,"docEnd":11427,"docs":{"brief":"Sets a string value in the array.","tags":[{"tag":"","text":"Sets a string value in the array."},{"tag":"param:index","text":"Index in the array."},{"tag":"param:value","text":"String value to set."},{"tag":"return","text":"True on success, false on failure."}]},"kind":"native","returnType":"bool","arguments":[{"type":"int","name":"index","decl":"int index","default":null},{"type":"const char[]","name":"value","decl":"const char[] value","default":null}]},{"name":"Push","docStart":11492,"docEnd":11671,"docs":{"brief":"Pushes an array or object value onto the end of the array, adding a new index.","tags":[{"tag":"","text":"Pushes an array or object value onto the end of the array, adding a new index."},{"tag":"param:value","text":"Value to push."},{"tag":"return","text":"True on success, false on failure."}]},"kind":"native","returnType":"bool","arguments":[{"type":"JSON","name":"value","decl":"JSON value","default":null}]},{"name":"PushBool","docStart":11712,"docEnd":11882,"docs":{"brief":"Pushes a boolean value onto the end of the array, adding a new index.","tags":[{"tag":"","text":"Pushes a boolean value onto the end of the array, adding a new index."},{"tag":"param:value","text":"Value to push."},{"tag":"return","text":"True on success, false on failure."}]},"kind":"native","returnType":"bool","arguments":[{"type":"bool","name":"value","decl":"bool value","default":null}]},{"name":"PushFloat","docStart":11927,"docEnd":12095,"docs":{"brief":"Pushes a float value onto the end of the array, adding a new index.","tags":[{"tag":"","text":"Pushes a float value onto the end of the array, adding a new index."},{"tag":"param:value","text":"Value to push."},{"tag":"return","text":"True on success, false on failure."}]},"kind":"native","returnType":"bool","arguments":[{"type":"float","name":"value","decl":"float value","default":null}]},{"name":"PushInt","docStart":12142,"docEnd":12313,"docs":{"brief":"Pushes an integer value onto the end of the array, adding a new index.","tags":[{"tag":"","text":"Pushes an integer value onto the end of the array, adding a new index."},{"tag":"param:value","text":"Value to push."},{"tag":"return","text":"True on success, false on failure."}]},"kind":"native","returnType":"bool","arguments":[{"type":"int","name":"value","decl":"int value","default":null}]},{"name":"PushInt64","docStart":12356,"docEnd":12548,"docs":{"brief":"Pushes a 64-bit integer value onto the end of the array, adding a new index.","tags":[{"tag":"","text":"Pushes a 64-bit integer value onto the end of the array, adding a new index."},{"tag":"param:value","text":"64-bit integer value to push."},{"tag":"return","text":"True on success, false on failure."}]},"kind":"native","returnType":"bool","arguments":[{"type":"const char[]","name":"value","decl":"const char[] value","default":null}]},{"name":"PushNull","docStart":12602,"docEnd":12728,"docs":{"brief":"Pushes a null value onto the end of the array, adding a new index.","tags":[{"tag":"","text":"Pushes a null value onto the end of the array, adding a new index."},{"tag":"return","text":"True on success, false on failure."}]},"kind":"native","returnType":"bool","arguments":[]},{"name":"PushString","docStart":12763,"docEnd":12939,"docs":{"brief":"Pushes a string value onto the end of the array, adding a new index.","tags":[{"tag":"","text":"Pushes a string value onto the end of the array, adding a new index."},{"tag":"param:value","text":"String value to push."},{"tag":"return","text":"True on success, false on failure."}]},"kind":"native","returnType":"bool","arguments":[{"type":"const char[]","name":"value","decl":"const char[] value","default":null}]},{"name":"Remove","docStart":12994,"docEnd":13148,"docs":{"brief":"Removes an entry from the array.","tags":[{"tag":"","text":"Removes an entry from the array."},{"tag":"param:index","text":"Index in the array to remove."},{"tag":"return","text":"True on success, false on invalid index."}]},"kind":"native","returnType":"bool","arguments":[{"type":"int","name":"index","decl":"int index","default":null}]},{"name":"Clear","docStart":13190,"docEnd":13282,"docs":{"brief":"Clears the array of all entries.","tags":[{"tag":"","text":"Clears the array of all entries."},{"tag":"return","text":"True on success, false on failure."}]},"kind":"native","returnType":"bool","arguments":[]}],"properties":[{"name":"Length","docStart":13314,"docEnd":13349,"docs":{"brief":"Retrieves the size of the array.","tags":[{"tag":"","text":"Retrieves the size of the array."}]},"type":"int","getter":true,"setter":false}]}],"enumstructs":[],"constants":[{"name":"JSON_MAX_INDENT","docStart":53,"docEnd":80,"docs":{"brief":"Maximum indentation","tags":[{"tag":"","text":"Maximum indentation"}]}},{"name":"JSON_COMPACT","docStart":109,"docEnd":139,"docs":{"brief":"Compact representation","tags":[{"tag":"","text":"Compact representation"}]}},{"name":"JSON_ENSURE_ASCII","docStart":168,"docEnd":229,"docs":{"brief":"Escape all Unicode characters outside the ASCII range","tags":[{"tag":"","text":"Escape all Unicode characters outside the ASCII range"}]}},{"name":"JSON_SORT_KEYS","docStart":258,"docEnd":282,"docs":{"brief":"Sort object keys","tags":[{"tag":"","text":"Sort object keys"}]}},{"name":"JSON_ENCODE_ANY","docStart":312,"docEnd":336,"docs":{"brief":"Encode any value","tags":[{"tag":"","text":"Encode any value"}]}},{"name":"JSON_ESCAPE_SLASH","docStart":366,"docEnd":390,"docs":{"brief":"Escape / with \\/","tags":[{"tag":"","text":"Escape / with \\/"}]}},{"name":"JSON_EMBED","docStart":421,"docEnd":484,"docs":{"brief":"Omit opening and closing braces of the top-level object","tags":[{"tag":"","text":"Omit opening and closing braces of the top-level object"}]}}],"enums":[],"typesets":[],"typedefs":[]}