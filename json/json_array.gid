{"functions":[],"methodmaps":[{"name":"JSON_Array","docStart":0,"docEnd":0,"docs":null,"parent":"JSON_Object","methods":[{"name":"CanUseType","docStart":2954,"docEnd":3149,"docs":{"brief":"Checks whether the array accepts the type provided.","tags":[{"tag":"","text":"Checks whether the array accepts the type provided."},{"tag":"param:type","text":"Type to check for enforcement."},{"tag":"returns","text":"True if the type can be used, false otherwise."}]},"kind":"stock","returnType":"bool","arguments":[{"type":"JSONCellType","name":"type","decl":"JSONCellType type","default":null}]},{"name":"HasKey","docStart":3281,"docEnd":3466,"docs":{"brief":"Checks whether the object has an index.","tags":[{"tag":"","text":"Checks whether the object has an index."},{"tag":"param:index","text":"Index to check existence of."},{"tag":"returns","text":"True if the index exists, false otherwise."}]},"kind":"stock","returnType":"bool","arguments":[{"type":"int","name":"index","decl":"int index","default":null}]},{"name":"GetIndexAsString","docStart":3568,"docEnd":4006,"docs":{"brief":"Outputs an index as a string with optional validation.","tags":[{"tag":"","text":"Outputs an index as a string with optional validation."},{"tag":"param:index","text":"Index to output."},{"tag":"param:output","text":"String buffer to store output."},{"tag":"param:max_size","text":"Maximum size of string buffer."},{"tag":"param:validate","text":"Should we check that the index is valid before\nconverting it to a string? [default: true]"},{"tag":"returns","text":"True if the index is valid, false otherwise."}]},"kind":"stock","returnType":"bool","arguments":[{"type":"int","name":"index","decl":"int index","default":null},{"type":"char[]","name":"output","decl":"char[] output","default":null},{"type":"int","name":"max_size","decl":"int max_size","default":null},{"type":"bool","name":"validate","decl":"bool validate","default":"true"}]},{"name":"GetMetadata","docStart":4349,"docEnd":4482,"docs":{"brief":"Converts index to a string ('key') and calls the relevant Super method.","tags":[{"tag":"","text":"Converts index to a string ('key') and calls the relevant Super method."},{"tag":"see","text":"JSON_Object.GetMetadata"}]},"kind":"stock","returnType":"any","arguments":[{"type":"int","name":"index","decl":"int index","default":null},{"type":"JSONMetaInfo","name":"meta","decl":"JSONMetaInfo meta","default":null},{"type":"any","name":"default_value","decl":"any default_value","default":null}]},{"name":"GetKeyType","docStart":4790,"docEnd":4922,"docs":{"brief":"Converts index to a string ('key') and calls the relevant Super method.","tags":[{"tag":"","text":"Converts index to a string ('key') and calls the relevant Super method."},{"tag":"see","text":"JSON_Object.GetKeyType"}]},"kind":"stock","returnType":"JSONCellType","arguments":[{"type":"int","name":"index","decl":"int index","default":null}]},{"name":"GetKeyLength","docStart":5182,"docEnd":5316,"docs":{"brief":"Converts index to a string ('key') and calls the relevant Super method.","tags":[{"tag":"","text":"Converts index to a string ('key') and calls the relevant Super method."},{"tag":"see","text":"JSON_Object.GetKeyLength"}]},"kind":"stock","returnType":"int","arguments":[{"type":"int","name":"index","decl":"int index","default":null}]},{"name":"GetKeyHidden","docStart":5556,"docEnd":5690,"docs":{"brief":"Converts index to a string ('key') and calls the relevant Super method.","tags":[{"tag":"","text":"Converts index to a string ('key') and calls the relevant Super method."},{"tag":"see","text":"JSON_Object.GetKeyHidden"}]},"kind":"stock","returnType":"bool","arguments":[{"type":"int","name":"index","decl":"int index","default":null}]},{"name":"SetMetadata","docStart":5984,"docEnd":6117,"docs":{"brief":"Converts index to a string ('key') and calls the relevant Super method.","tags":[{"tag":"","text":"Converts index to a string ('key') and calls the relevant Super method."},{"tag":"see","text":"JSON_Object.SetMetadata"}]},"kind":"stock","returnType":"bool","arguments":[{"type":"int","name":"index","decl":"int index","default":null},{"type":"JSONMetaInfo","name":"meta","decl":"JSONMetaInfo meta","default":null},{"type":"any","name":"value","decl":"any value","default":null}]},{"name":"RemoveMetadata","docStart":6402,"docEnd":6538,"docs":{"brief":"Converts index to a string ('key') and calls the relevant Super method.","tags":[{"tag":"","text":"Converts index to a string ('key') and calls the relevant Super method."},{"tag":"see","text":"JSON_Object.RemoveMetadata"}]},"kind":"stock","returnType":"bool","arguments":[{"type":"int","name":"index","decl":"int index","default":null},{"type":"JSONMetaInfo","name":"meta","decl":"JSONMetaInfo meta","default":null}]},{"name":"SetKeyType","docStart":6811,"docEnd":6943,"docs":{"brief":"Converts index to a string ('key') and calls the relevant Super method.","tags":[{"tag":"","text":"Converts index to a string ('key') and calls the relevant Super method."},{"tag":"see","text":"JSON_Object.SetKeyType"}]},"kind":"stock","returnType":"bool","arguments":[{"type":"int","name":"index","decl":"int index","default":null},{"type":"JSONCellType","name":"type","decl":"JSONCellType type","default":null}]},{"name":"SetKeyLength","docStart":7208,"docEnd":7342,"docs":{"brief":"Converts index to a string ('key') and calls the relevant Super method.","tags":[{"tag":"","text":"Converts index to a string ('key') and calls the relevant Super method."},{"tag":"see","text":"JSON_Object.SetKeyLength"}]},"kind":"stock","returnType":"bool","arguments":[{"type":"int","name":"index","decl":"int index","default":null},{"type":"int","name":"length","decl":"int length","default":null}]},{"name":"SetKeyHidden","docStart":7606,"docEnd":7740,"docs":{"brief":"Converts index to a string ('key') and calls the relevant Super method.","tags":[{"tag":"","text":"Converts index to a string ('key') and calls the relevant Super method."},{"tag":"see","text":"JSON_Object.SetKeyHidden"}]},"kind":"stock","returnType":"bool","arguments":[{"type":"int","name":"index","decl":"int index","default":null},{"type":"bool","name":"hidden","decl":"bool hidden","default":null}]},{"name":"GetValue","docStart":8046,"docEnd":8176,"docs":{"brief":"Converts index to a string ('key') and calls the relevant Super method.","tags":[{"tag":"","text":"Converts index to a string ('key') and calls the relevant Super method."},{"tag":"see","text":"JSON_Object.GetValue"}]},"kind":"stock","returnType":"bool","arguments":[{"type":"int","name":"index","decl":"int index","default":null},{"type":"any&","name":"value","decl":"any& value","default":null}]},{"name":"GetString","docStart":8431,"docEnd":8562,"docs":{"brief":"Converts index to a string ('key') and calls the relevant Super method.","tags":[{"tag":"","text":"Converts index to a string ('key') and calls the relevant Super method."},{"tag":"see","text":"JSON_Object.GetString"}]},"kind":"stock","returnType":"bool","arguments":[{"type":"int","name":"index","decl":"int index","default":null},{"type":"char[]","name":"value","decl":"char[] value","default":null},{"type":"int","name":"max_size","decl":"int max_size","default":null},{"type":"int&","name":"size","decl":"int& size","default":"0"}]},{"name":"GetInt","docStart":8866,"docEnd":8994,"docs":{"brief":"Converts index to a string ('key') and calls the relevant Super method.","tags":[{"tag":"","text":"Converts index to a string ('key') and calls the relevant Super method."},{"tag":"see","text":"JSON_Object.GetInt"}]},"kind":"stock","returnType":"int","arguments":[{"type":"int","name":"index","decl":"int index","default":null},{"type":"int","name":"default_value","decl":"int default_value","default":"-1"}]},{"name":"GetFloat","docStart":9272,"docEnd":9402,"docs":{"brief":"Converts index to a string ('key') and calls the relevant Super method.","tags":[{"tag":"","text":"Converts index to a string ('key') and calls the relevant Super method."},{"tag":"see","text":"JSON_Object.GetFloat"}]},"kind":"stock","returnType":"float","arguments":[{"type":"int","name":"index","decl":"int index","default":null},{"type":"float","name":"default_value","decl":"float default_value","default":"-1.000000"}]},{"name":"GetBool","docStart":9690,"docEnd":9819,"docs":{"brief":"Converts index to a string ('key') and calls the relevant Super method.","tags":[{"tag":"","text":"Converts index to a string ('key') and calls the relevant Super method."},{"tag":"see","text":"JSON_Object.GetBool"}]},"kind":"stock","returnType":"bool","arguments":[{"type":"int","name":"index","decl":"int index","default":null},{"type":"bool","name":"default_value","decl":"bool default_value","default":"false"}]},{"name":"GetObject","docStart":10104,"docEnd":10235,"docs":{"brief":"Converts index to a string ('key') and calls the relevant Super method.","tags":[{"tag":"","text":"Converts index to a string ('key') and calls the relevant Super method."},{"tag":"see","text":"JSON_Object.GetObject"}]},"kind":"stock","returnType":"JSON_Object","arguments":[{"type":"int","name":"index","decl":"int index","default":null},{"type":"JSON_Object","name":"default_value","decl":"JSON_Object default_value","default":"null"}]},{"name":"SetString","docStart":10578,"docEnd":10709,"docs":{"brief":"Converts index to a string ('key') and calls the relevant Super method.","tags":[{"tag":"","text":"Converts index to a string ('key') and calls the relevant Super method."},{"tag":"see","text":"JSON_Object.SetString"}]},"kind":"stock","returnType":"bool","arguments":[{"type":"int","name":"index","decl":"int index","default":null},{"type":"const char[]","name":"value","decl":"const char[] value","default":null}]},{"name":"SetInt","docStart":11061,"docEnd":11189,"docs":{"brief":"Converts index to a string ('key') and calls the relevant Super method.","tags":[{"tag":"","text":"Converts index to a string ('key') and calls the relevant Super method."},{"tag":"see","text":"JSON_Object.SetInt"}]},"kind":"stock","returnType":"bool","arguments":[{"type":"int","name":"index","decl":"int index","default":null},{"type":"int","name":"value","decl":"int value","default":null}]},{"name":"SetFloat","docStart":11523,"docEnd":11653,"docs":{"brief":"Converts index to a string ('key') and calls the relevant Super method.","tags":[{"tag":"","text":"Converts index to a string ('key') and calls the relevant Super method."},{"tag":"see","text":"JSON_Object.SetFloat"}]},"kind":"stock","returnType":"bool","arguments":[{"type":"int","name":"index","decl":"int index","default":null},{"type":"float","name":"value","decl":"float value","default":null}]},{"name":"SetBool","docStart":11995,"docEnd":12124,"docs":{"brief":"Converts index to a string ('key') and calls the relevant Super method.","tags":[{"tag":"","text":"Converts index to a string ('key') and calls the relevant Super method."},{"tag":"see","text":"JSON_Object.SetBool"}]},"kind":"stock","returnType":"bool","arguments":[{"type":"int","name":"index","decl":"int index","default":null},{"type":"bool","name":"value","decl":"bool value","default":null}]},{"name":"SetObject","docStart":12462,"docEnd":12593,"docs":{"brief":"Converts index to a string ('key') and calls the relevant Super method.","tags":[{"tag":"","text":"Converts index to a string ('key') and calls the relevant Super method."},{"tag":"see","text":"JSON_Object.SetObject"}]},"kind":"stock","returnType":"bool","arguments":[{"type":"int","name":"index","decl":"int index","default":null},{"type":"JSON_Object","name":"value","decl":"JSON_Object value","default":null}]},{"name":"PushString","docStart":12985,"docEnd":13160,"docs":{"brief":"Pushes a string to the end of the array.","tags":[{"tag":"","text":"Pushes a string to the end of the array."},{"tag":"param:value","text":"Value to push."},{"tag":"returns","text":"The element's index on success, -1 otherwise."}]},"kind":"stock","returnType":"int","arguments":[{"type":"const char[]","name":"value","decl":"const char[] value","default":null}]},{"name":"PushInt","docStart":13416,"docEnd":13589,"docs":{"brief":"Pushes an int to the end of the array.","tags":[{"tag":"","text":"Pushes an int to the end of the array."},{"tag":"param:value","text":"Value to push."},{"tag":"returns","text":"The element's index on success, -1 otherwise."}]},"kind":"stock","returnType":"int","arguments":[{"type":"int","name":"value","decl":"int value","default":null}]},{"name":"PushFloat","docStart":13830,"docEnd":14004,"docs":{"brief":"Pushes a float to the end of the array.","tags":[{"tag":"","text":"Pushes a float to the end of the array."},{"tag":"param:value","text":"Value to push."},{"tag":"returns","text":"The element's index on success, -1 otherwise."}]},"kind":"stock","returnType":"int","arguments":[{"type":"float","name":"value","decl":"float value","default":null}]},{"name":"PushBool","docStart":14251,"docEnd":14424,"docs":{"brief":"Pushes a bool to the end of the array.","tags":[{"tag":"","text":"Pushes a bool to the end of the array."},{"tag":"param:value","text":"Value to push."},{"tag":"returns","text":"The element's index on success, -1 otherwise."}]},"kind":"stock","returnType":"int","arguments":[{"type":"bool","name":"value","decl":"bool value","default":null}]},{"name":"PushObject","docStart":14668,"docEnd":14848,"docs":{"brief":"Pushes a JSON object to the end of the array.","tags":[{"tag":"","text":"Pushes a JSON object to the end of the array."},{"tag":"param:value","text":"Value to push."},{"tag":"returns","text":"The element's index on success, -1 otherwise."}]},"kind":"stock","returnType":"int","arguments":[{"type":"JSON_Object","name":"value","decl":"JSON_Object value","default":null}]},{"name":"IndexOf","docStart":15151,"docEnd":15339,"docs":{"brief":"Finds the index of a value in the array.","tags":[{"tag":"","text":"Finds the index of a value in the array."},{"tag":"param:value","text":"Value to search for."},{"tag":"returns","text":"The index of the value if it is found, -1 otherwise."}]},"kind":"stock","returnType":"int","arguments":[{"type":"any","name":"value","decl":"any value","default":null}]},{"name":"IndexOfString","docStart":15598,"docEnd":15789,"docs":{"brief":"Finds the index of a string in the array.","tags":[{"tag":"","text":"Finds the index of a string in the array."},{"tag":"param:value","text":"String to search for."},{"tag":"returns","text":"The index of the string if it is found, -1 otherwise."}]},"kind":"stock","returnType":"int","arguments":[{"type":"const char[]","name":"value","decl":"const char[] value","default":null}]},{"name":"Contains","docStart":16284,"docEnd":16470,"docs":{"brief":"Determines whether the array contains a value.","tags":[{"tag":"","text":"Determines whether the array contains a value."},{"tag":"param:value","text":"Value to search for."},{"tag":"returns","text":"True if the value is found, false otherwise."}]},"kind":"stock","returnType":"bool","arguments":[{"type":"any","name":"value","decl":"any value","default":null}]},{"name":"ContainsString","docStart":16566,"docEnd":16755,"docs":{"brief":"Determines whether the array contains a string.","tags":[{"tag":"","text":"Determines whether the array contains a string."},{"tag":"param:value","text":"String to search for."},{"tag":"returns","text":"True if the string is found, false otherwise."}]},"kind":"stock","returnType":"bool","arguments":[{"type":"const char[]","name":"value","decl":"const char[] value","default":null}]},{"name":"Clear","docStart":16925,"docEnd":17001,"docs":{"brief":"Clears all entries and ensures the array index is re-set.","tags":[{"tag":"","text":"Clears all entries and ensures the array index is re-set."}]},"kind":"stock","returnType":"void","arguments":[]},{"name":"Remove","docStart":17096,"docEnd":17340,"docs":{"brief":"Removes an index and its related meta-keys from the array,\nand shifts down all following element indices.","tags":[{"tag":"","text":"Removes an index and its related meta-keys from the array,\nand shifts down all following element indices."},{"tag":"param:key","text":"Key to remove."},{"tag":"returns","text":"True on success, false if the value was never set."}]},"kind":"stock","returnType":"bool","arguments":[{"type":"int","name":"index","decl":"int index","default":null}]},{"name":"SetType","docStart":19647,"docEnd":19942,"docs":{"brief":"Sets the array to enforce a specific type.\nThis will fail if there are any existing elements\nin the array which are not of the same type.","tags":[{"tag":"","text":"Sets the array to enforce a specific type.\nThis will fail if there are any existing elements\nin the array which are not of the same type."},{"tag":"param:type","text":"Type to enforce."},{"tag":"returns","text":"True if the type was enforced successfully, false otherwise."}]},"kind":"stock","returnType":"bool","arguments":[{"type":"JSONCellType","name":"type","decl":"JSONCellType type","default":null}]},{"name":"ImportValues","docStart":20311,"docEnd":20572,"docs":{"brief":"Imports a native array's values into the instance.","tags":[{"tag":"","text":"Imports a native array's values into the instance."},{"tag":"param:type","text":"Type of native values."},{"tag":"param:values","text":"Array of values."},{"tag":"param:size","text":"Size of array."},{"tag":"returns","text":"True on success, false otherwise."}]},"kind":"stock","returnType":"bool","arguments":[{"type":"JSONCellType","name":"type","decl":"JSONCellType type","default":null},{"type":"any[]","name":"values","decl":"any[] values","default":null},{"type":"int","name":"size","decl":"int size","default":null}]},{"name":"ImportStrings","docStart":21332,"docEnd":21548,"docs":{"brief":"Imports a native array's strings into the instance.","tags":[{"tag":"","text":"Imports a native array's strings into the instance."},{"tag":"param:strings","text":"Array of strings."},{"tag":"param:size","text":"Size of array."},{"tag":"returns","text":"True on success, false otherwise."}]},"kind":"stock","returnType":"bool","arguments":[{"type":"const char[][]","name":"strings","decl":"const char[][] strings","default":null},{"type":"int","name":"size","decl":"int size","default":null}]},{"name":"ExportValues","docStart":21805,"docEnd":21964,"docs":{"brief":"Exports the instance's values into a native array.","tags":[{"tag":"","text":"Exports the instance's values into a native array."},{"tag":"param:values","text":"Array to export to."},{"tag":"param:size","text":"Size of array."}]},"kind":"stock","returnType":"void","arguments":[{"type":"any[]","name":"values","decl":"any[] values","default":null},{"type":"int","name":"max_size","decl":"int max_size","default":null}]},{"name":"ExportStrings","docStart":22223,"docEnd":22383,"docs":{"brief":"Exports the instance's strings into a native array.","tags":[{"tag":"","text":"Exports the instance's strings into a native array."},{"tag":"param:values","text":"Array to export to."},{"tag":"param:size","text":"Size of array."}]},"kind":"stock","returnType":"void","arguments":[{"type":"char[][]","name":"values","decl":"char[][] values","default":null},{"type":"int","name":"max_size","decl":"int max_size","default":null},{"type":"int","name":"max_string_size","decl":"int max_string_size","default":null}]},{"name":"JSON_Array","docStart":22781,"docEnd":22989,"docs":{"brief":"Creates a new JSON_Array.","tags":[{"tag":"","text":"Creates a new JSON_Array."},{"tag":"param:type","text":"The type to enforce for this array, or\nJSON_Type_Invalid for no enforced type."},{"tag":"returns","text":"A new JSON_Array."}]},"kind":"stock","returnType":"JSON_Array","arguments":[{"type":"JSONCellType","name":"type","decl":"JSONCellType type","default":"JSON_Type_Invalid"}]},{"name":"ShallowCopy","docStart":23265,"docEnd":23454,"docs":{"brief":"Calls the json_copy_shallow method, replacing the 'obj' parameter\nwith this instance and casting the return value to an array.","tags":[{"tag":"","text":"Calls the json_copy_shallow method, replacing the 'obj' parameter\nwith this instance and casting the return value to an array."},{"tag":"see","text":"json_copy_shallow"}]},"kind":"stock","returnType":"JSON_Array","arguments":[]},{"name":"DeepCopy","docStart":23570,"docEnd":23753,"docs":{"brief":"Calls the json_copy_deep method, replacing the 'obj' parameter\nwith this instance and casting the return value to an array.","tags":[{"tag":"","text":"Calls the json_copy_deep method, replacing the 'obj' parameter\nwith this instance and casting the return value to an array."},{"tag":"see","text":"json_copy_deep"}]},"kind":"stock","returnType":"JSON_Array","arguments":[]}],"properties":[{"name":"Super","docStart":1817,"docEnd":1902,"docs":{"brief":"Views the instance as its superclass to access overridden methods.","tags":[{"tag":"","text":"Views the instance as its superclass to access overridden methods."}]},"type":"JSON_Object","getter":true,"setter":false},{"name":"Length","docStart":2039,"docEnd":2094,"docs":{"brief":"The number of elements in the array.","tags":[{"tag":"","text":"The number of elements in the array."}]},"type":"int","getter":true,"setter":true},{"name":"Type","docStart":2409,"docEnd":2459,"docs":{"brief":"The enforced type of the array.","tags":[{"tag":"","text":"The enforced type of the array."}]},"type":"JSONCellType","getter":true,"setter":true},{"name":"MaxStringLength","docStart":19091,"docEnd":19156,"docs":{"brief":"The length of the longest string in the array.","tags":[{"tag":"","text":"The length of the longest string in the array."}]},"type":"int","getter":true,"setter":false}]}],"enumstructs":[],"constants":[],"enums":[],"typesets":[],"typedefs":[]}