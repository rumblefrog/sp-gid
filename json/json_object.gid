{"functions":[],"methodmaps":[{"name":"JSON_Object","docStart":0,"docEnd":0,"docs":null,"parent":"StringMap","methods":[{"name":"HasKey","docStart":2074,"docEnd":2244,"docs":{"brief":"Checks whether the object has a key.","tags":[{"tag":"","text":"Checks whether the object has a key."},{"tag":"param:key","text":"Key to check existence of."},{"tag":"returns","text":"True if the key exists, false otherwise."}]},"kind":"stock","returnType":"bool","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null}]},{"name":"GetKeyType","docStart":3006,"docEnd":3221,"docs":{"brief":"Gets the cell type stored at a key.","tags":[{"tag":"","text":"Gets the cell type stored at a key."},{"tag":"param:key","text":"Key to get value type for."},{"tag":"returns","text":"Value type for key provided,\nor Type_Invalid if it does not exist."}]},"kind":"stock","returnType":"JSON_CELL_TYPE","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null}]},{"name":"GetKeyLength","docStart":3578,"docEnd":3818,"docs":{"brief":"Gets the length of the string stored at a key.","tags":[{"tag":"","text":"Gets the length of the string stored at a key."},{"tag":"param:key","text":"Key to get string length for."},{"tag":"returns","text":"Length of string at key provided,\nor -1 if it is not a string/does not exist."}]},"kind":"stock","returnType":"int","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null}]},{"name":"GetKeyHidden","docStart":4161,"docEnd":4349,"docs":{"brief":"Gets whether the key should be hidden from encoding.","tags":[{"tag":"","text":"Gets whether the key should be hidden from encoding."},{"tag":"param:key","text":"Key to get hidden state for."},{"tag":"returns","text":"Whether or not the key should be hidden."}]},"kind":"stock","returnType":"bool","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null}]},{"name":"SetKeyType","docStart":4697,"docEnd":4899,"docs":{"brief":"Sets the cell type stored at a key.","tags":[{"tag":"","text":"Sets the cell type stored at a key."},{"tag":"param:key","text":"Key to set value type for."},{"tag":"param:type","text":"Type to set key to."},{"tag":"returns","text":"True on success, false otherwise."}]},"kind":"stock","returnType":"bool","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null},{"type":"JSON_CELL_TYPE","name":"type","decl":"JSON_CELL_TYPE type","default":null}]},{"name":"SetKeyLength","docStart":5214,"docEnd":5447,"docs":{"brief":"Sets the length of the string stored at a key.","tags":[{"tag":"","text":"Sets the length of the string stored at a key."},{"tag":"param:key","text":"Key to set string length for."},{"tag":"param:length","text":"Length to set string to."},{"tag":"returns","text":"True on success, false otherwise."}]},"kind":"stock","returnType":"bool","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null},{"type":"int","name":"length","decl":"int length","default":null}]},{"name":"SetKeyHidden","docStart":5767,"docEnd":6020,"docs":{"brief":"Sets whether the key should be hidden from encoding.","tags":[{"tag":"","text":"Sets whether the key should be hidden from encoding."},{"tag":"param:key","text":"Key to set hidden state for."},{"tag":"param:hidden","text":"Wheter or not the key should be hidden."},{"tag":"returns","text":"True on success, false otherwise."}]},"kind":"stock","returnType":"bool","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null},{"type":"bool","name":"hidden","decl":"bool hidden","default":null}]},{"name":"GetInt","docStart":6614,"docEnd":6853,"docs":{"brief":"Retrieves the int stored at a key.","tags":[{"tag":"","text":"Retrieves the int stored at a key."},{"tag":"param:key","text":"Key to retrieve int value for."},{"tag":"param:defaultValue","text":"Value to return if the key does not exist."},{"tag":"returns","text":"Value stored at key."}]},"kind":"stock","returnType":"int","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null},{"type":"int","name":"defaultValue","decl":"int defaultValue","default":"-1"}]},{"name":"GetFloat","docStart":7020,"docEnd":7263,"docs":{"brief":"Retrieves the float stored at a key.","tags":[{"tag":"","text":"Retrieves the float stored at a key."},{"tag":"param:key","text":"Key to retrieve float value for."},{"tag":"param:defaultValue","text":"Value to return if the key does not exist."},{"tag":"returns","text":"Value stored at key."}]},"kind":"stock","returnType":"float","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null},{"type":"float","name":"defaultValue","decl":"float defaultValue","default":"-1.000000"}]},{"name":"GetBool","docStart":7440,"docEnd":7681,"docs":{"brief":"Retrieves the bool stored at a key.","tags":[{"tag":"","text":"Retrieves the bool stored at a key."},{"tag":"param:key","text":"Key to retrieve bool value for."},{"tag":"param:defaultValue","text":"Value to return if the key does not exist."},{"tag":"returns","text":"Value stored at key."}]},"kind":"stock","returnType":"bool","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null},{"type":"bool","name":"defaultValue","decl":"bool defaultValue","default":"false"}]},{"name":"GetNull","docStart":7855,"docEnd":8092,"docs":{"brief":"Retrieves null stored at a key.","tags":[{"tag":"","text":"Retrieves null stored at a key."},{"tag":"param:key","text":"Key to retrieve null value for."},{"tag":"param:defaultValue","text":"Value to return if the key does not exist."},{"tag":"returns","text":"Value stored at key."}]},"kind":"stock","returnType":"Handle","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null},{"type":"Handle","name":"defaultValue","decl":"Handle defaultValue","default":"null"}]},{"name":"GetObject","docStart":8271,"docEnd":8521,"docs":{"brief":"Retrieves the JSON object stored at a key.","tags":[{"tag":"","text":"Retrieves the JSON object stored at a key."},{"tag":"param:key","text":"Key to retrieve object value for."},{"tag":"param:defaultValue","text":"Value to return if the key does not exist."},{"tag":"returns","text":"Value stored at key."}]},"kind":"stock","returnType":"JSON_Object","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null},{"type":"JSON_Object","name":"defaultValue","decl":"JSON_Object defaultValue","default":"null"}]},{"name":"SetString","docStart":8756,"docEnd":8962,"docs":{"brief":"Sets the string stored at a key.","tags":[{"tag":"","text":"Sets the string stored at a key."},{"tag":"param:key","text":"Key to set to string value."},{"tag":"param:value","text":"Value to set."},{"tag":"returns","text":"True on success, false otherwise."}]},"kind":"stock","returnType":"bool","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null},{"type":"const char[]","name":"value","decl":"const char[] value","default":null}]},{"name":"SetInt","docStart":9196,"docEnd":9396,"docs":{"brief":"Sets the int stored at a key.","tags":[{"tag":"","text":"Sets the int stored at a key."},{"tag":"param:key","text":"Key to set to int value."},{"tag":"param:value","text":"Value to set."},{"tag":"returns","text":"True on success, false otherwise."}]},"kind":"stock","returnType":"bool","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null},{"type":"int","name":"value","decl":"int value","default":null}]},{"name":"SetFloat","docStart":9554,"docEnd":9758,"docs":{"brief":"Sets the float stored at a key.","tags":[{"tag":"","text":"Sets the float stored at a key."},{"tag":"param:key","text":"Key to set to float value."},{"tag":"param:value","text":"Value to set."},{"tag":"returns","text":"True on success, false otherwise."}]},"kind":"stock","returnType":"bool","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null},{"type":"float","name":"value","decl":"float value","default":null}]},{"name":"SetBool","docStart":9922,"docEnd":10124,"docs":{"brief":"Sets the bool stored at a key.","tags":[{"tag":"","text":"Sets the bool stored at a key."},{"tag":"param:key","text":"Key to set to bool value."},{"tag":"param:value","text":"Value to set."},{"tag":"returns","text":"True on success, false otherwise."}]},"kind":"stock","returnType":"bool","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null},{"type":"bool","name":"value","decl":"bool value","default":null}]},{"name":"SetNull","docStart":10285,"docEnd":10432,"docs":{"brief":"Sets null at a key.","tags":[{"tag":"","text":"Sets null at a key."},{"tag":"param:key","text":"Key to set to null."},{"tag":"returns","text":"True on success, false otherwise."}]},"kind":"stock","returnType":"bool","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null}]},{"name":"SetObject","docStart":10610,"docEnd":10821,"docs":{"brief":"Sets the JSON object stored at a key.","tags":[{"tag":"","text":"Sets the JSON object stored at a key."},{"tag":"param:key","text":"Key to set to object value."},{"tag":"param:value","text":"Value to set."},{"tag":"returns","text":"True on success, false otherwise."}]},"kind":"stock","returnType":"bool","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null},{"type":"JSON_Object","name":"value","decl":"JSON_Object value","default":null}]},{"name":"Remove","docStart":11046,"docEnd":11235,"docs":{"brief":"Removes an item from the object by key.","tags":[{"tag":"","text":"Removes an item from the object by key."},{"tag":"param:key","text":"Key of object to remove."},{"tag":"returns","text":"True on success, false if the value was never set."}]},"kind":"stock","returnType":"bool","arguments":[{"type":"const char[]","name":"key","decl":"const char[] key","default":null}]},{"name":"JSON_Object","docStart":11985,"docEnd":12076,"docs":{"brief":"Creates a new JSON_Object.","tags":[{"tag":"","text":"Creates a new JSON_Object."},{"tag":"returns","text":"A new JSON_Object."}]},"kind":"stock","returnType":"JSON_Object","arguments":[]},{"name":"Encode","docStart":12170,"docEnd":12299,"docs":{"brief":"Calls the json_encode method, replacing the 'obj' parameter with this instance.","tags":[{"tag":"","text":"Calls the json_encode method, replacing the 'obj' parameter with this instance."},{"tag":"see","text":"json_encode"}]},"kind":"stock","returnType":"void","arguments":[{"type":"char[]","name":"output","decl":"char[] output","default":null},{"type":"int","name":"max_size","decl":"int max_size","default":null},{"type":"bool","name":"pretty_print","decl":"bool pretty_print","default":"false"},{"type":"int","name":"depth","decl":"int depth","default":"0"}]},{"name":"Decode","docStart":12477,"docEnd":12611,"docs":{"brief":"Calls the json_decode method, replacing the 'existing' parameter with this instance.","tags":[{"tag":"","text":"Calls the json_decode method, replacing the 'existing' parameter with this instance."},{"tag":"see","text":"json_decode"}]},"kind":"stock","returnType":"void","arguments":[{"type":"const char[]","name":"buffer","decl":"const char[] buffer","default":null}]},{"name":"Merge","docStart":12708,"docEnd":12834,"docs":{"brief":"Calls the json_merge method, replacing the 'to' parameter with this instance.","tags":[{"tag":"","text":"Calls the json_merge method, replacing the 'to' parameter with this instance."},{"tag":"see","text":"json_merge"}]},"kind":"stock","returnType":"bool","arguments":[{"type":"JSON_Object","name":"from","decl":"JSON_Object from","default":null},{"type":"bool","name":"replace","decl":"bool replace","default":"true"},{"type":"bool","name":"autocleanup","decl":"bool autocleanup","default":"false"}]},{"name":"ShallowCopy","docStart":13000,"docEnd":13141,"docs":{"brief":"Calls the json_copy_shallow method, replacing the 'obj' parameter with this instance.","tags":[{"tag":"","text":"Calls the json_copy_shallow method, replacing the 'obj' parameter with this instance."},{"tag":"see","text":"json_copy_shallow"}]},"kind":"stock","returnType":"JSON_Object","arguments":[]},{"name":"DeepCopy","docStart":13236,"docEnd":13371,"docs":{"brief":"Calls the json_copy_deep method, replacing the 'obj' parameter with this instance.","tags":[{"tag":"","text":"Calls the json_copy_deep method, replacing the 'obj' parameter with this instance."},{"tag":"see","text":"json_copy_deep"}]},"kind":"stock","returnType":"JSON_Object","arguments":[]},{"name":"Cleanup","docStart":13460,"docEnd":13591,"docs":{"brief":"Calls the json_cleanup method, replacing the 'obj' parameter with this instance.","tags":[{"tag":"","text":"Calls the json_cleanup method, replacing the 'obj' parameter with this instance."},{"tag":"see","text":"json_cleanup"}]},"kind":"stock","returnType":"void","arguments":[]}],"properties":[{"name":"parent","docStart":1859,"docEnd":1940,"docs":{"brief":"Views the instance as its parent to access overridden methods.","tags":[{"tag":"","text":"Views the instance as its parent to access overridden methods."}]},"type":"StringMap","getter":true,"setter":false},{"name":"IsArray","docStart":2465,"docEnd":2523,"docs":{"brief":"Whether the current object is an array.","tags":[{"tag":"","text":"Whether the current object is an array."}]},"type":"bool","getter":true,"setter":false},{"name":"Length","docStart":2658,"docEnd":2732,"docs":{"brief":"The number of keys in the object (including meta-keys).","tags":[{"tag":"","text":"The number of keys in the object (including meta-keys)."}]},"type":"int","getter":true,"setter":false}]}],"enumstructs":[],"constants":[],"enums":[],"typesets":[],"typedefs":[]}