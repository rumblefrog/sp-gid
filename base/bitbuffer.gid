{"functions":[{"name":"BfWriteBool","docStart":7262,"docEnd":7508,"docs":{"brief":"Writes a single bit to a writable bitbuffer (bf_write).","tags":[{"tag":"","text":"Writes a single bit to a writable bitbuffer (bf_write)."},{"tag":"param:bf","text":"bf_write handle to write to."},{"tag":"param:bit","text":"Bit to write (true for 1, false for 0)."},{"tag":"error","text":"Invalid or incorrect Handle."}]},"kind":"native","returnType":"void","arguments":[{"type":"Handle","name":"bf","decl":"Handle bf","default":null},{"type":"bool","name":"bit","decl":"bool bit","default":null}]},{"name":"BfWriteByte","docStart":7560,"docEnd":7806,"docs":{"brief":"Writes a byte to a writable bitbuffer (bf_write).","tags":[{"tag":"","text":"Writes a byte to a writable bitbuffer (bf_write)."},{"tag":"param:bf","text":"bf_write handle to write to."},{"tag":"param:byte","text":"Byte to write (value will be written as 8bit)."},{"tag":"error","text":"Invalid or incorrect Handle."}]},"kind":"native","returnType":"void","arguments":[{"type":"Handle","name":"bf","decl":"Handle bf","default":null},{"type":"int","name":"byte","decl":"int byte","default":null}]},{"name":"BfWriteChar","docStart":7857,"docEnd":8076,"docs":{"brief":"Writes a byte to a writable bitbuffer (bf_write).","tags":[{"tag":"","text":"Writes a byte to a writable bitbuffer (bf_write)."},{"tag":"param:bf","text":"bf_write handle to write to."},{"tag":"param:chr","text":"Character to write."},{"tag":"error","text":"Invalid or incorrect Handle."}]},"kind":"native","returnType":"void","arguments":[{"type":"Handle","name":"bf","decl":"Handle bf","default":null},{"type":"int","name":"chr","decl":"int chr","default":null}]},{"name":"BfWriteShort","docStart":8126,"docEnd":8385,"docs":{"brief":"Writes a 16bit integer to a writable bitbuffer (bf_write).","tags":[{"tag":"","text":"Writes a 16bit integer to a writable bitbuffer (bf_write)."},{"tag":"param:bf","text":"bf_write handle to write to."},{"tag":"param:num","text":"Integer to write (value will be written as 16bit)."},{"tag":"error","text":"Invalid or incorrect Handle."}]},"kind":"native","returnType":"void","arguments":[{"type":"Handle","name":"bf","decl":"Handle bf","default":null},{"type":"int","name":"num","decl":"int num","default":null}]},{"name":"BfWriteWord","docStart":8436,"docEnd":8704,"docs":{"brief":"Writes a 16bit unsigned integer to a writable bitbuffer (bf_write).","tags":[{"tag":"","text":"Writes a 16bit unsigned integer to a writable bitbuffer (bf_write)."},{"tag":"param:bf","text":"bf_write handle to write to."},{"tag":"param:num","text":"Integer to write (value will be written as 16bit)."},{"tag":"error","text":"Invalid or incorrect Handle."}]},"kind":"native","returnType":"void","arguments":[{"type":"Handle","name":"bf","decl":"Handle bf","default":null},{"type":"int","name":"num","decl":"int num","default":null}]},{"name":"BfWriteNum","docStart":8754,"docEnd":9014,"docs":{"brief":"Writes a normal integer to a writable bitbuffer (bf_write).","tags":[{"tag":"","text":"Writes a normal integer to a writable bitbuffer (bf_write)."},{"tag":"param:bf","text":"bf_write handle to write to."},{"tag":"param:num","text":"Integer to write (value will be written as 32bit)."},{"tag":"error","text":"Invalid or incorrect Handle."}]},"kind":"native","returnType":"void","arguments":[{"type":"Handle","name":"bf","decl":"Handle bf","default":null},{"type":"int","name":"num","decl":"int num","default":null}]},{"name":"BfWriteFloat","docStart":9063,"docEnd":9296,"docs":{"brief":"Writes a floating point number to a writable bitbuffer (bf_write).","tags":[{"tag":"","text":"Writes a floating point number to a writable bitbuffer (bf_write)."},{"tag":"param:bf","text":"bf_write handle to write to."},{"tag":"param:num","text":"Number to write."},{"tag":"error","text":"Invalid or incorrect Handle."}]},"kind":"native","returnType":"void","arguments":[{"type":"Handle","name":"bf","decl":"Handle bf","default":null},{"type":"float","name":"num","decl":"float num","default":null}]},{"name":"BfWriteString","docStart":9349,"docEnd":9572,"docs":{"brief":"Writes a string to a writable bitbuffer (bf_write).","tags":[{"tag":"","text":"Writes a string to a writable bitbuffer (bf_write)."},{"tag":"param:bf","text":"bf_write handle to write to."},{"tag":"param:string","text":"Text string to write."},{"tag":"error","text":"Invalid or incorrect Handle."}]},"kind":"native","returnType":"void","arguments":[{"type":"Handle","name":"bf","decl":"Handle bf","default":null},{"type":"const char[]","name":"string","decl":"const char[] string","default":null}]},{"name":"BfWriteEntity","docStart":9636,"docEnd":9931,"docs":{"brief":"Writes an entity to a writable bitbuffer (bf_write).","tags":[{"tag":"","text":"Writes an entity to a writable bitbuffer (bf_write)."},{"tag":"note","text":"This is a wrapper around BfWriteShort()."},{"tag":"param:bf","text":"bf_write handle to write to."},{"tag":"param:ent","text":"Entity index to write."},{"tag":"error","text":"Invalid or incorrect Handle, or invalid entity."}]},"kind":"native","returnType":"void","arguments":[{"type":"Handle","name":"bf","decl":"Handle bf","default":null},{"type":"int","name":"ent","decl":"int ent","default":null}]},{"name":"BfWriteAngle","docStart":9983,"docEnd":10260,"docs":{"brief":"Writes a bit angle to a writable bitbuffer (bf_write).","tags":[{"tag":"","text":"Writes a bit angle to a writable bitbuffer (bf_write)."},{"tag":"param:bf","text":"bf_write handle to write to."},{"tag":"param:angle","text":"Angle to write."},{"tag":"param:numBits","text":"Optional number of bits to use."},{"tag":"error","text":"Invalid or incorrect Handle."}]},"kind":"native","returnType":"void","arguments":[{"type":"Handle","name":"bf","decl":"Handle bf","default":null},{"type":"float","name":"angle","decl":"float angle","default":null},{"type":"int","name":"numBits","decl":"int numBits","default":"8"}]},{"name":"BfWriteCoord","docStart":10330,"docEnd":10556,"docs":{"brief":"Writes a coordinate to a writable bitbuffer (bf_write).","tags":[{"tag":"","text":"Writes a coordinate to a writable bitbuffer (bf_write)."},{"tag":"param:bf","text":"bf_write handle to write to."},{"tag":"param:coord","text":"Coordinate to write."},{"tag":"error","text":"Invalid or incorrect Handle."}]},"kind":"native","returnType":"void","arguments":[{"type":"Handle","name":"bf","decl":"Handle bf","default":null},{"type":"float","name":"coord","decl":"float coord","default":null}]},{"name":"BfWriteVecCoord","docStart":10611,"docEnd":10857,"docs":{"brief":"Writes a 3D vector of coordinates to a writable bitbuffer (bf_write).","tags":[{"tag":"","text":"Writes a 3D vector of coordinates to a writable bitbuffer (bf_write)."},{"tag":"param:bf","text":"bf_write handle to write to."},{"tag":"param:coord","text":"Coordinate array to write."},{"tag":"error","text":"Invalid or incorrect Handle."}]},"kind":"native","returnType":"void","arguments":[{"type":"Handle","name":"bf","decl":"Handle bf","default":null},{"type":"float","name":"coord[3]","decl":"float coord[3]","default":null}]},{"name":"BfWriteVecNormal","docStart":10918,"docEnd":11146,"docs":{"brief":"Writes a 3D normal vector to a writable bitbuffer (bf_write).","tags":[{"tag":"","text":"Writes a 3D normal vector to a writable bitbuffer (bf_write)."},{"tag":"param:bf","text":"bf_write handle to write to."},{"tag":"param:vec","text":"Vector to write."},{"tag":"error","text":"Invalid or incorrect Handle."}]},"kind":"native","returnType":"void","arguments":[{"type":"Handle","name":"bf","decl":"Handle bf","default":null},{"type":"float","name":"vec[3]","decl":"float vec[3]","default":null}]},{"name":"BfWriteAngles","docStart":11206,"docEnd":11439,"docs":{"brief":"Writes a 3D angle vector to a writable bitbuffer (bf_write).","tags":[{"tag":"","text":"Writes a 3D angle vector to a writable bitbuffer (bf_write)."},{"tag":"param:bf","text":"bf_write handle to write to."},{"tag":"param:angles","text":"Angle vector to write."},{"tag":"error","text":"Invalid or incorrect Handle."}]},"kind":"native","returnType":"void","arguments":[{"type":"Handle","name":"bf","decl":"Handle bf","default":null},{"type":"float","name":"angles[3]","decl":"float angles[3]","default":null}]},{"name":"BfReadBool","docStart":11499,"docEnd":11721,"docs":{"brief":"Reads a single bit from a readable bitbuffer (bf_read).","tags":[{"tag":"","text":"Reads a single bit from a readable bitbuffer (bf_read)."},{"tag":"param:bf","text":"bf_read handle to read from."},{"tag":"return","text":"Bit value read."},{"tag":"error","text":"Invalid or incorrect Handle."}]},"kind":"native","returnType":"bool","arguments":[{"type":"Handle","name":"bf","decl":"Handle bf","default":null}]},{"name":"BfReadByte","docStart":11761,"docEnd":11992,"docs":{"brief":"Reads a byte from a readable bitbuffer (bf_read).","tags":[{"tag":"","text":"Reads a byte from a readable bitbuffer (bf_read)."},{"tag":"param:bf","text":"bf_read handle to read from."},{"tag":"return","text":"Byte value read (read as 8bit)."},{"tag":"error","text":"Invalid or incorrect Handle."}]},"kind":"native","returnType":"int","arguments":[{"type":"Handle","name":"bf","decl":"Handle bf","default":null}]},{"name":"BfReadChar","docStart":12031,"docEnd":12257,"docs":{"brief":"Reads a character from a readable bitbuffer (bf_read).","tags":[{"tag":"","text":"Reads a character from a readable bitbuffer (bf_read)."},{"tag":"param:bf","text":"bf_read handle to read from."},{"tag":"return","text":"Character value read."},{"tag":"error","text":"Invalid or incorrect Handle."}]},"kind":"native","returnType":"int","arguments":[{"type":"Handle","name":"bf","decl":"Handle bf","default":null}]},{"name":"BfReadShort","docStart":12296,"docEnd":12540,"docs":{"brief":"Reads a 16bit integer from a readable bitbuffer (bf_read).","tags":[{"tag":"","text":"Reads a 16bit integer from a readable bitbuffer (bf_read)."},{"tag":"param:bf","text":"bf_read handle to read from."},{"tag":"return","text":"Integer value read (read as 16bit)."},{"tag":"error","text":"Invalid or incorrect Handle."}]},"kind":"native","returnType":"int","arguments":[{"type":"Handle","name":"bf","decl":"Handle bf","default":null}]},{"name":"BfReadWord","docStart":12580,"docEnd":12833,"docs":{"brief":"Reads a 16bit unsigned integer from a readable bitbuffer (bf_read).","tags":[{"tag":"","text":"Reads a 16bit unsigned integer from a readable bitbuffer (bf_read)."},{"tag":"param:bf","text":"bf_read handle to read from."},{"tag":"return","text":"Integer value read (read as 16bit)."},{"tag":"error","text":"Invalid or incorrect Handle."}]},"kind":"native","returnType":"int","arguments":[{"type":"Handle","name":"bf","decl":"Handle bf","default":null}]},{"name":"BfReadNum","docStart":12872,"docEnd":13115,"docs":{"brief":"Reads a normal integer to a readable bitbuffer (bf_read).","tags":[{"tag":"","text":"Reads a normal integer to a readable bitbuffer (bf_read)."},{"tag":"param:bf","text":"bf_read handle to read from."},{"tag":"return","text":"Integer value read (read as 32bit)."},{"tag":"error","text":"Invalid or incorrect Handle."}]},"kind":"native","returnType":"int","arguments":[{"type":"Handle","name":"bf","decl":"Handle bf","default":null}]},{"name":"BfReadFloat","docStart":13153,"docEnd":13396,"docs":{"brief":"Reads a floating point number from a readable bitbuffer (bf_read).","tags":[{"tag":"","text":"Reads a floating point number from a readable bitbuffer (bf_read)."},{"tag":"param:bf","text":"bf_read handle to read from."},{"tag":"return","text":"Floating point value read."},{"tag":"error","text":"Invalid or incorrect Handle."}]},"kind":"native","returnType":"float","arguments":[{"type":"Handle","name":"bf","decl":"Handle bf","default":null}]},{"name":"BfReadString","docStart":13438,"docEnd":14271,"docs":{"brief":"Reads a string from a readable bitbuffer (bf_read).","tags":[{"tag":"","text":"Reads a string from a readable bitbuffer (bf_read)."},{"tag":"param:bf","text":"bf_read handle to read from."},{"tag":"param:buffer","text":"Destination string buffer."},{"tag":"param:maxlength","text":"Maximum length of output string buffer."},{"tag":"param:line","text":"If true the buffer will be copied until it reaches a '\\n' or a null terminator."},{"tag":"return","text":"Number of bytes written to the buffer.  If the bitbuffer stream overflowed,\nthat is, had no terminator before the end of the stream, then a negative\nnumber will be returned equal to the number of characters written to the\nbuffer minus 1.  The buffer will be null terminated regardless of the\nreturn value."},{"tag":"error","text":"Invalid or incorrect Handle."}]},"kind":"native","returnType":"int","arguments":[{"type":"Handle","name":"bf","decl":"Handle bf","default":null},{"type":"char[]","name":"buffer","decl":"char[] buffer","default":null},{"type":"int","name":"maxlength","decl":"int maxlength","default":null},{"type":"bool","name":"line","decl":"bool line","default":"false"}]},{"name":"BfReadEntity","docStart":14359,"docEnd":14630,"docs":{"brief":"Reads an entity from a readable bitbuffer (bf_read).","tags":[{"tag":"","text":"Reads an entity from a readable bitbuffer (bf_read)."},{"tag":"note","text":"This is a wrapper around BfReadShort()."},{"tag":"param:bf","text":"bf_read handle to read from."},{"tag":"return","text":"Entity index read."},{"tag":"error","text":"Invalid or incorrect Handle."}]},"kind":"native","returnType":"int","arguments":[{"type":"Handle","name":"bf","decl":"Handle bf","default":null}]},{"name":"BfReadAngle","docStart":14671,"docEnd":14944,"docs":{"brief":"Reads a bit angle from a readable bitbuffer (bf_read).","tags":[{"tag":"","text":"Reads a bit angle from a readable bitbuffer (bf_read)."},{"tag":"param:bf","text":"bf_read handle to read from."},{"tag":"param:numBits","text":"Optional number of bits to use."},{"tag":"return","text":"Angle read."},{"tag":"error","text":"Invalid or incorrect Handle."}]},"kind":"native","returnType":"float","arguments":[{"type":"Handle","name":"bf","decl":"Handle bf","default":null},{"type":"int","name":"numBits","decl":"int numBits","default":"8"}]},{"name":"BfReadCoord","docStart":15001,"docEnd":15223,"docs":{"brief":"Reads a coordinate from a readable bitbuffer (bf_read).","tags":[{"tag":"","text":"Reads a coordinate from a readable bitbuffer (bf_read)."},{"tag":"param:bf","text":"bf_read handle to read from."},{"tag":"return","text":"Coordinate read."},{"tag":"error","text":"Invalid or incorrect Handle."}]},"kind":"native","returnType":"float","arguments":[{"type":"Handle","name":"bf","decl":"Handle bf","default":null}]},{"name":"BfReadVecCoord","docStart":15265,"docEnd":15514,"docs":{"brief":"Reads a 3D vector of coordinates from a readable bitbuffer (bf_read).","tags":[{"tag":"","text":"Reads a 3D vector of coordinates from a readable bitbuffer (bf_read)."},{"tag":"param:bf","text":"bf_read handle to read from."},{"tag":"param:coord","text":"Destination coordinate array."},{"tag":"error","text":"Invalid or incorrect Handle."}]},"kind":"native","returnType":"void","arguments":[{"type":"Handle","name":"bf","decl":"Handle bf","default":null},{"type":"float","name":"coord[3]","decl":"float coord[3]","default":null}]},{"name":"BfReadVecNormal","docStart":15574,"docEnd":15811,"docs":{"brief":"Reads a 3D normal vector from a readable bitbuffer (bf_read).","tags":[{"tag":"","text":"Reads a 3D normal vector from a readable bitbuffer (bf_read)."},{"tag":"param:bf","text":"bf_read handle to read from."},{"tag":"param:vec","text":"Destination vector array."},{"tag":"error","text":"Invalid or incorrect Handle."}]},"kind":"native","returnType":"void","arguments":[{"type":"Handle","name":"bf","decl":"Handle bf","default":null},{"type":"float","name":"vec[3]","decl":"float vec[3]","default":null}]},{"name":"BfReadAngles","docStart":15870,"docEnd":16106,"docs":{"brief":"Reads a 3D angle vector from a readable bitbuffer (bf_read).","tags":[{"tag":"","text":"Reads a 3D angle vector from a readable bitbuffer (bf_read)."},{"tag":"param:bf","text":"bf_read handle to read from."},{"tag":"param:angles","text":"Destination angle vector."},{"tag":"error","text":"Invalid or incorrect Handle."}]},"kind":"native","returnType":"void","arguments":[{"type":"Handle","name":"bf","decl":"Handle bf","default":null},{"type":"float","name":"angles[3]","decl":"float angles[3]","default":null}]},{"name":"BfGetNumBytesLeft","docStart":16165,"docEnd":16411,"docs":{"brief":"Returns the number of bytes left in a readable bitbuffer (bf_read).","tags":[{"tag":"","text":"Returns the number of bytes left in a readable bitbuffer (bf_read)."},{"tag":"param:bf","text":"bf_read handle to read from."},{"tag":"return","text":"Number of bytes left unread."},{"tag":"error","text":"Invalid or incorrect Handle."}]},"kind":"native","returnType":"int","arguments":[{"type":"Handle","name":"bf","decl":"Handle bf","default":null}]}],"methodmaps":[{"name":"BfWrite","docStart":0,"docEnd":0,"docs":null,"parent":"Handle","methods":[{"name":"WriteBool","docStart":1692,"docEnd":1817,"docs":{"brief":"Writes a single bit to a writable bitbuffer (bf_write).","tags":[{"tag":"","text":"Writes a single bit to a writable bitbuffer (bf_write)."},{"tag":"param:bit","text":"Bit to write (true for 1, false for 0)."}]},"kind":"native","returnType":"void","arguments":[{"type":"bool","name":"bit","decl":"bool bit","default":null}]},{"name":"WriteByte","docStart":1866,"docEnd":1992,"docs":{"brief":"Writes a byte to a writable bitbuffer (bf_write).","tags":[{"tag":"","text":"Writes a byte to a writable bitbuffer (bf_write)."},{"tag":"param:byte","text":"Byte to write (value will be written as 8bit)."}]},"kind":"native","returnType":"void","arguments":[{"type":"int","name":"byte","decl":"int byte","default":null}]},{"name":"WriteChar","docStart":2039,"docEnd":2138,"docs":{"brief":"Writes a byte to a writable bitbuffer (bf_write).","tags":[{"tag":"","text":"Writes a byte to a writable bitbuffer (bf_write)."},{"tag":"param:chr","text":"Character to write."}]},"kind":"native","returnType":"void","arguments":[{"type":"int","name":"chr","decl":"int chr","default":null}]},{"name":"WriteShort","docStart":2184,"docEnd":2323,"docs":{"brief":"Writes a 16bit integer to a writable bitbuffer (bf_write).","tags":[{"tag":"","text":"Writes a 16bit integer to a writable bitbuffer (bf_write)."},{"tag":"param:num","text":"Integer to write (value will be written as 16bit)."}]},"kind":"native","returnType":"void","arguments":[{"type":"int","name":"num","decl":"int num","default":null}]},{"name":"WriteWord","docStart":2370,"docEnd":2518,"docs":{"brief":"Writes a 16bit unsigned integer to a writable bitbuffer (bf_write).","tags":[{"tag":"","text":"Writes a 16bit unsigned integer to a writable bitbuffer (bf_write)."},{"tag":"param:num","text":"Integer to write (value will be written as 16bit)."}]},"kind":"native","returnType":"void","arguments":[{"type":"int","name":"num","decl":"int num","default":null}]},{"name":"WriteNum","docStart":2564,"docEnd":2704,"docs":{"brief":"Writes a normal integer to a writable bitbuffer (bf_write).","tags":[{"tag":"","text":"Writes a normal integer to a writable bitbuffer (bf_write)."},{"tag":"param:num","text":"Integer to write (value will be written as 32bit)."}]},"kind":"native","returnType":"void","arguments":[{"type":"int","name":"num","decl":"int num","default":null}]},{"name":"WriteFloat","docStart":2749,"docEnd":2862,"docs":{"brief":"Writes a floating point number to a writable bitbuffer (bf_write).","tags":[{"tag":"","text":"Writes a floating point number to a writable bitbuffer (bf_write)."},{"tag":"param:num","text":"Number to write."}]},"kind":"native","returnType":"void","arguments":[{"type":"float","name":"num","decl":"float num","default":null}]},{"name":"WriteString","docStart":2911,"docEnd":3014,"docs":{"brief":"Writes a string to a writable bitbuffer (bf_write).","tags":[{"tag":"","text":"Writes a string to a writable bitbuffer (bf_write)."},{"tag":"param:string","text":"Text string to write."}]},"kind":"native","returnType":"void","arguments":[{"type":"const char[]","name":"string","decl":"const char[] string","default":null}]},{"name":"WriteEntity","docStart":3074,"docEnd":3179,"docs":{"brief":"Writes an entity to a writable bitbuffer (bf_write).","tags":[{"tag":"","text":"Writes an entity to a writable bitbuffer (bf_write)."},{"tag":"param:ent","text":"Entity index to write."}]},"kind":"native","returnType":"void","arguments":[{"type":"int","name":"ent","decl":"int ent","default":null}]},{"name":"WriteAngle","docStart":3227,"docEnd":3381,"docs":{"brief":"Writes a bit angle to a writable bitbuffer (bf_write).","tags":[{"tag":"","text":"Writes a bit angle to a writable bitbuffer (bf_write)."},{"tag":"param:angle","text":"Angle to write."},{"tag":"param:numBits","text":"Optional number of bits to use."}]},"kind":"native","returnType":"void","arguments":[{"type":"float","name":"angle","decl":"float angle","default":null},{"type":"int","name":"numBits","decl":"int numBits","default":"8"}]},{"name":"WriteCoord","docStart":3447,"docEnd":3553,"docs":{"brief":"Writes a coordinate to a writable bitbuffer (bf_write).","tags":[{"tag":"","text":"Writes a coordinate to a writable bitbuffer (bf_write)."},{"tag":"param:coord","text":"Coordinate to write."}]},"kind":"native","returnType":"void","arguments":[{"type":"float","name":"coord","decl":"float coord","default":null}]},{"name":"WriteVecCoord","docStart":3604,"docEnd":3730,"docs":{"brief":"Writes a 3D vector of coordinates to a writable bitbuffer (bf_write).","tags":[{"tag":"","text":"Writes a 3D vector of coordinates to a writable bitbuffer (bf_write)."},{"tag":"param:coord","text":"Coordinate array to write."}]},"kind":"native","returnType":"void","arguments":[{"type":"float","name":"coord[3]","decl":"float coord[3]","default":null}]},{"name":"WriteVecNormal","docStart":3787,"docEnd":3895,"docs":{"brief":"Writes a 3D normal vector to a writable bitbuffer (bf_write).","tags":[{"tag":"","text":"Writes a 3D normal vector to a writable bitbuffer (bf_write)."},{"tag":"param:vec","text":"Vector to write."}]},"kind":"native","returnType":"void","arguments":[{"type":"float","name":"vec[3]","decl":"float vec[3]","default":null}]},{"name":"WriteAngles","docStart":3951,"docEnd":4064,"docs":{"brief":"Writes a 3D angle vector to a writable bitbuffer (bf_write).","tags":[{"tag":"","text":"Writes a 3D angle vector to a writable bitbuffer (bf_write)."},{"tag":"param:angles","text":"Angle vector to write."}]},"kind":"native","returnType":"void","arguments":[{"type":"float","name":"angles[3]","decl":"float angles[3]","default":null}]}],"properties":[]},{"name":"BfRead","docStart":0,"docEnd":0,"docs":null,"parent":"Handle","methods":[{"name":"ReadBool","docStart":4154,"docEnd":4255,"docs":{"brief":"Reads a single bit from a readable bitbuffer (bf_read).","tags":[{"tag":"","text":"Reads a single bit from a readable bitbuffer (bf_read)."},{"tag":"return","text":"Bit value read."}]},"kind":"native","returnType":"bool","arguments":[]},{"name":"ReadByte","docStart":4293,"docEnd":4404,"docs":{"brief":"Reads a byte from a readable bitbuffer (bf_read).","tags":[{"tag":"","text":"Reads a byte from a readable bitbuffer (bf_read)."},{"tag":"return","text":"Byte value read (read as 8bit)."}]},"kind":"native","returnType":"int","arguments":[]},{"name":"ReadChar","docStart":4441,"docEnd":4547,"docs":{"brief":"Reads a character from a readable bitbuffer (bf_read).","tags":[{"tag":"","text":"Reads a character from a readable bitbuffer (bf_read)."},{"tag":"return","text":"Character value read."}]},"kind":"native","returnType":"int","arguments":[]},{"name":"ReadShort","docStart":4584,"docEnd":4759,"docs":{"brief":"Reads a 16bit integer from a readable bitbuffer (bf_read).","tags":[{"tag":"","text":"Reads a 16bit integer from a readable bitbuffer (bf_read)."},{"tag":"param:bf","text":"bf_read handle to read from."},{"tag":"return","text":"Integer value read (read as 16bit)."}]},"kind":"native","returnType":"int","arguments":[]},{"name":"ReadWord","docStart":4797,"docEnd":4981,"docs":{"brief":"Reads a 16bit unsigned integer from a readable bitbuffer (bf_read).","tags":[{"tag":"","text":"Reads a 16bit unsigned integer from a readable bitbuffer (bf_read)."},{"tag":"param:bf","text":"bf_read handle to read from."},{"tag":"return","text":"Integer value read (read as 16bit)."}]},"kind":"native","returnType":"int","arguments":[]},{"name":"ReadNum","docStart":5018,"docEnd":5141,"docs":{"brief":"Reads a normal integer to a readable bitbuffer (bf_read).","tags":[{"tag":"","text":"Reads a normal integer to a readable bitbuffer (bf_read)."},{"tag":"return","text":"Integer value read (read as 32bit)."}]},"kind":"native","returnType":"int","arguments":[]},{"name":"ReadFloat","docStart":5177,"docEnd":5300,"docs":{"brief":"Reads a floating point number from a readable bitbuffer (bf_read).","tags":[{"tag":"","text":"Reads a floating point number from a readable bitbuffer (bf_read)."},{"tag":"return","text":"Floating point value read."}]},"kind":"native","returnType":"float","arguments":[]},{"name":"ReadString","docStart":5340,"docEnd":6032,"docs":{"brief":"Reads a string from a readable bitbuffer (bf_read).","tags":[{"tag":"","text":"Reads a string from a readable bitbuffer (bf_read)."},{"tag":"param:buffer","text":"Destination string buffer."},{"tag":"param:maxlength","text":"Maximum length of output string buffer."},{"tag":"param:line","text":"If true the buffer will be copied until it reaches a '\\n' or a null terminator."},{"tag":"return","text":"Number of bytes written to the buffer.  If the bitbuffer stream overflowed,\nthat is, had no terminator before the end of the stream, then a negative\nnumber will be returned equal to the number of characters written to the\nbuffer minus 1.  The buffer will be null terminated regardless of the\nreturn value."}]},"kind":"native","returnType":"int","arguments":[{"type":"char[]","name":"buffer","decl":"char[] buffer","default":null},{"type":"int","name":"maxlength","decl":"int maxlength","default":null},{"type":"bool","name":"line","decl":"bool line","default":"false"}]},{"name":"ReadEntity","docStart":6116,"docEnd":6217,"docs":{"brief":"Reads an entity from a readable bitbuffer (bf_read).","tags":[{"tag":"","text":"Reads an entity from a readable bitbuffer (bf_read)."},{"tag":"return","text":"Entity index read."}]},"kind":"native","returnType":"int","arguments":[]},{"name":"ReadAngle","docStart":6256,"docEnd":6406,"docs":{"brief":"Reads a bit angle from a readable bitbuffer (bf_read).","tags":[{"tag":"","text":"Reads a bit angle from a readable bitbuffer (bf_read)."},{"tag":"param:numBits","text":"Optional number of bits to use."},{"tag":"return","text":"Angle read."}]},"kind":"native","returnType":"float","arguments":[{"type":"int","name":"numBits","decl":"int numBits","default":"8"}]},{"name":"ReadCoord","docStart":6459,"docEnd":6561,"docs":{"brief":"Reads a coordinate from a readable bitbuffer (bf_read).","tags":[{"tag":"","text":"Reads a coordinate from a readable bitbuffer (bf_read)."},{"tag":"return","text":"Coordinate read."}]},"kind":"native","returnType":"float","arguments":[]},{"name":"ReadVecCoord","docStart":6601,"docEnd":6730,"docs":{"brief":"Reads a 3D vector of coordinates from a readable bitbuffer (bf_read).","tags":[{"tag":"","text":"Reads a 3D vector of coordinates from a readable bitbuffer (bf_read)."},{"tag":"param:coord","text":"Destination coordinate array."}]},"kind":"native","returnType":"void","arguments":[{"type":"float","name":"coord[3]","decl":"float coord[3]","default":null}]},{"name":"ReadVecNormal","docStart":6786,"docEnd":6903,"docs":{"brief":"Reads a 3D normal vector from a readable bitbuffer (bf_read).","tags":[{"tag":"","text":"Reads a 3D normal vector from a readable bitbuffer (bf_read)."},{"tag":"param:vec","text":"Destination vector array."}]},"kind":"native","returnType":"void","arguments":[{"type":"float","name":"vec[3]","decl":"float vec[3]","default":null}]},{"name":"ReadAngles","docStart":6958,"docEnd":7074,"docs":{"brief":"Reads a 3D angle vector from a readable bitbuffer (bf_read).","tags":[{"tag":"","text":"Reads a 3D angle vector from a readable bitbuffer (bf_read)."},{"tag":"param:angles","text":"Destination angle vector."}]},"kind":"native","returnType":"void","arguments":[{"type":"float","name":"angles[3]","decl":"float angles[3]","default":null}]}],"properties":[{"name":"BytesLeft","docStart":7129,"docEnd":7199,"docs":{"brief":"Returns the number of bytes left in a readable bitbuffer (bf_read).","tags":[{"tag":"","text":"Returns the number of bytes left in a readable bitbuffer (bf_read)."}]},"type":"int","getter":true,"setter":false}]}],"enumstructs":[],"constants":[],"enums":[],"typesets":[],"typedefs":[]}