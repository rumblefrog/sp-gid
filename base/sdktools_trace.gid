{"functions":[{"name":"TR_GetPointContents","docStart":11180,"docEnd":11433,"docs":{"brief":"Get the contents mask and the entity index at the given position.","tags":[{"tag":"","text":"Get the contents mask and the entity index at the given position."},{"tag":"param:pos","text":"World position to test."},{"tag":"param:entindex","text":"Entity index found at the given position (by reference)."},{"tag":"return","text":"Contents mask."}]},"kind":"native","returnType":"int","arguments":[{"type":"const float","name":"pos[3]","decl":"const float pos[3]","default":null},{"type":"int&","name":"entindex","decl":"int& entindex","default":"-1"}]},{"name":"TR_GetPointContentsEnt","docStart":11508,"docEnd":11712,"docs":{"brief":"Get the point contents testing only the given entity index.","tags":[{"tag":"","text":"Get the point contents testing only the given entity index."},{"tag":"param:entindex","text":"Entity index to test."},{"tag":"param:pos","text":"World position."},{"tag":"return","text":"Contents mask."}]},"kind":"native","returnType":"int","arguments":[{"type":"int","name":"entindex","decl":"int entindex","default":null},{"type":"const float","name":"pos[3]","decl":"const float pos[3]","default":null}]},{"name":"TR_TraceRay","docStart":11786,"docEnd":12147,"docs":{"brief":"Starts up a new trace ray using a global trace result.","tags":[{"tag":"","text":"Starts up a new trace ray using a global trace result."},{"tag":"param:pos","text":"Starting position of the ray."},{"tag":"param:vec","text":"Depending on RayType, it will be used as the\nending point, or the direction angle."},{"tag":"param:flags","text":"Trace flags."},{"tag":"param:rtype","text":"Method to calculate the ray direction."}]},"kind":"native","returnType":"void","arguments":[{"type":"const float","name":"pos[3]","decl":"const float pos[3]","default":null},{"type":"const float","name":"vec[3]","decl":"const float vec[3]","default":null},{"type":"int","name":"flags","decl":"int flags","default":null},{"type":"RayType","name":"rtype","decl":"RayType rtype","default":null}]},{"name":"TR_TraceHull","docStart":12318,"docEnd":12624,"docs":{"brief":"Starts up a new trace hull using a global trace result.","tags":[{"tag":"","text":"Starts up a new trace hull using a global trace result."},{"tag":"param:pos","text":"Starting position of the ray."},{"tag":"param:vec","text":"Ending position of the ray."},{"tag":"param:mins","text":"Hull minimum size."},{"tag":"param:maxs","text":"Hull maximum size."},{"tag":"param:flags","text":"Trace flags."}]},"kind":"native","returnType":"void","arguments":[{"type":"const float","name":"pos[3]","decl":"const float pos[3]","default":null},{"type":"const float","name":"vec[3]","decl":"const float vec[3]","default":null},{"type":"const float","name":"mins[3]","decl":"const float mins[3]","default":null},{"type":"const float","name":"maxs[3]","decl":"const float maxs[3]","default":null},{"type":"int","name":"flags","decl":"int flags","default":null}]},{"name":"TR_EnumerateEntities","docStart":12852,"docEnd":13639,"docs":{"brief":"Enumerates over entities along a ray. This may find entities that are\nclose to the ray but do not actually intersect it. Use TR_Clip*RayToEntity\nwith TR_DidHit to check if the ray actually intersects the entity.","tags":[{"tag":"","text":"Enumerates over entities along a ray. This may find entities that are\nclose to the ray but do not actually intersect it. Use TR_Clip*RayToEntity\nwith TR_DidHit to check if the ray actually intersects the entity."},{"tag":"param:pos","text":"Starting position of the ray."},{"tag":"param:vec","text":"Depending on RayType, it will be used as the ending\npoint, or the direction angle."},{"tag":"param:mask","text":"Mask to use for the trace. See PARTITION_* flags."},{"tag":"param:rtype","text":"Method to calculate the ray direction."},{"tag":"param:enumerator","text":"Function to use as enumerator. For each entity found\nalong the ray, this function is called."},{"tag":"param:data","text":"Arbitrary data value to pass through to the enumerator."}]},"kind":"native","returnType":"void","arguments":[{"type":"const float","name":"pos[3]","decl":"const float pos[3]","default":null},{"type":"const float","name":"vec[3]","decl":"const float vec[3]","default":null},{"type":"int","name":"mask","decl":"int mask","default":null},{"type":"RayType","name":"rtype","decl":"RayType rtype","default":null},{"type":"TraceEntityEnumerator","name":"enumerator","decl":"TraceEntityEnumerator enumerator","default":null},{"type":"any","name":"data","decl":"any data","default":"0"}]},{"name":"TR_EnumerateEntitiesHull","docStart":13959,"docEnd":14695,"docs":{"brief":"Enumerates over entities along a ray hull. This may find entities that are\nclose to the ray but do not actually intersect it. Use TR_Clip*RayToEntity\nwith TR_DidHit to check if the ray actually intersects the entity.","tags":[{"tag":"","text":"Enumerates over entities along a ray hull. This may find entities that are\nclose to the ray but do not actually intersect it. Use TR_Clip*RayToEntity\nwith TR_DidHit to check if the ray actually intersects the entity."},{"tag":"param:pos","text":"Starting position of the ray."},{"tag":"param:vec","text":"Ending position of the ray."},{"tag":"param:mins","text":"Hull minimum size."},{"tag":"param:maxs","text":"Hull maximum size."},{"tag":"param:mask","text":"Mask to use for the trace. See PARTITION_* flags."},{"tag":"param:enumerator","text":"Function to use as enumerator. For each entity found\nalong the ray, this function is called."},{"tag":"param:data","text":"Arbitrary data value to pass through to the enumerator."}]},"kind":"native","returnType":"void","arguments":[{"type":"const float","name":"pos[3]","decl":"const float pos[3]","default":null},{"type":"const float","name":"vec[3]","decl":"const float vec[3]","default":null},{"type":"const float","name":"mins[3]","decl":"const float mins[3]","default":null},{"type":"const float","name":"maxs[3]","decl":"const float maxs[3]","default":null},{"type":"int","name":"mask","decl":"int mask","default":null},{"type":"TraceEntityEnumerator","name":"enumerator","decl":"TraceEntityEnumerator enumerator","default":null},{"type":"any","name":"data","decl":"any data","default":"0"}]},{"name":"TR_TraceRayFilter","docStart":15098,"docEnd":15792,"docs":{"brief":"Starts up a new trace ray using a global trace result and a customized\ntrace ray filter.\n\nCalling TR_Trace*Filter or TR_Trace*FilterEx from inside a filter\nfunction is currently not allowed and may not work.","tags":[{"tag":"","text":"Starts up a new trace ray using a global trace result and a customized\ntrace ray filter.\n\nCalling TR_Trace*Filter or TR_Trace*FilterEx from inside a filter\nfunction is currently not allowed and may not work."},{"tag":"param:pos","text":"Starting position of the ray."},{"tag":"param:vec","text":"Depending on RayType, it will be used as the ending\npoint, or the direction angle."},{"tag":"param:flags","text":"Trace flags."},{"tag":"param:rtype","text":"Method to calculate the ray direction."},{"tag":"param:filter","text":"Function to use as a filter."},{"tag":"param:data","text":"Arbitrary data value to pass through to the filter\nfunction."}]},"kind":"native","returnType":"void","arguments":[{"type":"const float","name":"pos[3]","decl":"const float pos[3]","default":null},{"type":"const float","name":"vec[3]","decl":"const float vec[3]","default":null},{"type":"int","name":"flags","decl":"int flags","default":null},{"type":"RayType","name":"rtype","decl":"RayType rtype","default":null},{"type":"TraceEntityFilter","name":"filter","decl":"TraceEntityFilter filter","default":null},{"type":"any","name":"data","decl":"any data","default":"0"}]},{"name":"TR_TraceHullFilter","docStart":16087,"docEnd":16726,"docs":{"brief":"Starts up a new trace hull using a global trace result and a customized\ntrace ray filter.\n\nCalling TR_Trace*Filter or TR_Trace*FilterEx from inside a filter\nfunction is currently not allowed and may not work.","tags":[{"tag":"","text":"Starts up a new trace hull using a global trace result and a customized\ntrace ray filter.\n\nCalling TR_Trace*Filter or TR_Trace*FilterEx from inside a filter\nfunction is currently not allowed and may not work."},{"tag":"param:pos","text":"Starting position of the ray."},{"tag":"param:vec","text":"Ending position of the ray."},{"tag":"param:mins","text":"Hull minimum size."},{"tag":"param:maxs","text":"Hull maximum size."},{"tag":"param:flags","text":"Trace flags."},{"tag":"param:filter","text":"Function to use as a filter."},{"tag":"param:data","text":"Arbitrary data value to pass through to the filter\nfunction."}]},"kind":"native","returnType":"void","arguments":[{"type":"const float","name":"pos[3]","decl":"const float pos[3]","default":null},{"type":"const float","name":"vec[3]","decl":"const float vec[3]","default":null},{"type":"const float","name":"mins[3]","decl":"const float mins[3]","default":null},{"type":"const float","name":"maxs[3]","decl":"const float maxs[3]","default":null},{"type":"int","name":"flags","decl":"int flags","default":null},{"type":"TraceEntityFilter","name":"filter","decl":"TraceEntityFilter filter","default":null},{"type":"any","name":"data","decl":"any data","default":"0"}]},{"name":"TR_ClipRayToEntity","docStart":17086,"docEnd":17472,"docs":{"brief":"Clips a ray to a particular entity.","tags":[{"tag":"","text":"Clips a ray to a particular entity."},{"tag":"param:pos","text":"Starting position of the ray."},{"tag":"param:vec","text":"Depending on RayType, it will be used as the ending\npoint, or the direction angle."},{"tag":"param:flags","text":"Trace flags."},{"tag":"param:rtype","text":"Method to calculate the ray direction."},{"tag":"param:entity","text":"Entity to clip to."}]},"kind":"native","returnType":"void","arguments":[{"type":"const float","name":"pos[3]","decl":"const float pos[3]","default":null},{"type":"const float","name":"vec[3]","decl":"const float vec[3]","default":null},{"type":"int","name":"flags","decl":"int flags","default":null},{"type":"RayType","name":"rtype","decl":"RayType rtype","default":null},{"type":"int","name":"entity","decl":"int entity","default":null}]},{"name":"TR_ClipRayHullToEntity","docStart":17715,"docEnd":18050,"docs":{"brief":"Clips a ray hull to a particular entity.","tags":[{"tag":"","text":"Clips a ray hull to a particular entity."},{"tag":"param:pos","text":"Starting position of the ray."},{"tag":"param:vec","text":"Ending position of the ray."},{"tag":"param:mins","text":"Hull minimum size."},{"tag":"param:maxs","text":"Hull maximum size."},{"tag":"param:flags","text":"Trace flags."},{"tag":"param:entity","text":"Entity to clip to."}]},"kind":"native","returnType":"void","arguments":[{"type":"const float","name":"pos[3]","decl":"const float pos[3]","default":null},{"type":"const float","name":"vec[3]","decl":"const float vec[3]","default":null},{"type":"const float","name":"mins[3]","decl":"const float mins[3]","default":null},{"type":"const float","name":"maxs[3]","decl":"const float maxs[3]","default":null},{"type":"int","name":"flags","decl":"int flags","default":null},{"type":"int","name":"entity","decl":"int entity","default":null}]},{"name":"TR_ClipCurrentRayToEntity","docStart":18376,"docEnd":18537,"docs":{"brief":"Clips the current global ray (or hull) to a particular entity.","tags":[{"tag":"","text":"Clips the current global ray (or hull) to a particular entity."},{"tag":"param:flags","text":"Trace flags."},{"tag":"param:entity","text":"Entity to clip to."}]},"kind":"native","returnType":"void","arguments":[{"type":"int","name":"flags","decl":"int flags","default":null},{"type":"int","name":"entity","decl":"int entity","default":null}]},{"name":"TR_TraceRayEx","docStart":18604,"docEnd":19045,"docs":{"brief":"Starts up a new trace ray using a new trace result.","tags":[{"tag":"","text":"Starts up a new trace ray using a new trace result."},{"tag":"param:pos","text":"Starting position of the ray."},{"tag":"param:vec","text":"Depending on RayType, it will be used as the ending\npoint, or the direction angle."},{"tag":"param:flags","text":"Trace flags."},{"tag":"param:rtype","text":"Method to calculate the ray direction."},{"tag":"return","text":"Ray trace handle, which must be closed via CloseHandle()."}]},"kind":"native","returnType":"Handle","arguments":[{"type":"const float","name":"pos[3]","decl":"const float pos[3]","default":null},{"type":"const float","name":"vec[3]","decl":"const float vec[3]","default":null},{"type":"int","name":"flags","decl":"int flags","default":null},{"type":"RayType","name":"rtype","decl":"RayType rtype","default":null}]},{"name":"TR_TraceHullEx","docStart":19232,"docEnd":19618,"docs":{"brief":"Starts up a new trace hull using a new trace result.","tags":[{"tag":"","text":"Starts up a new trace hull using a new trace result."},{"tag":"param:pos","text":"Starting position of the ray."},{"tag":"param:vec","text":"Ending position of the ray."},{"tag":"param:mins","text":"Hull minimum size."},{"tag":"param:maxs","text":"Hull maximum size."},{"tag":"param:flags","text":"Trace flags."},{"tag":"return","text":"Ray trace handle, which must be closed via CloseHandle()."}]},"kind":"native","returnType":"Handle","arguments":[{"type":"const float","name":"pos[3]","decl":"const float pos[3]","default":null},{"type":"const float","name":"vec[3]","decl":"const float vec[3]","default":null},{"type":"const float","name":"mins[3]","decl":"const float mins[3]","default":null},{"type":"const float","name":"maxs[3]","decl":"const float maxs[3]","default":null},{"type":"int","name":"flags","decl":"int flags","default":null}]},{"name":"TR_TraceRayFilterEx","docStart":19866,"docEnd":20612,"docs":{"brief":"Starts up a new trace ray using a new trace result and a customized\ntrace ray filter.\n\nCalling TR_Trace*Filter or TR_TraceRay*Ex from inside a filter\nfunction is currently not allowed and may not work.","tags":[{"tag":"","text":"Starts up a new trace ray using a new trace result and a customized\ntrace ray filter.\n\nCalling TR_Trace*Filter or TR_TraceRay*Ex from inside a filter\nfunction is currently not allowed and may not work."},{"tag":"param:pos","text":"Starting position of the ray."},{"tag":"param:vec","text":"Depending on RayType, it will be used as the ending\npoint, or the direction angle."},{"tag":"param:flags","text":"Trace flags."},{"tag":"param:rtype","text":"Method to calculate the ray direction."},{"tag":"param:filter","text":"Function to use as a filter."},{"tag":"param:data","text":"Arbitrary data value to pass through to the filter function."},{"tag":"return","text":"Ray trace handle, which must be closed via CloseHandle()."}]},"kind":"native","returnType":"Handle","arguments":[{"type":"const float","name":"pos[3]","decl":"const float pos[3]","default":null},{"type":"const float","name":"vec[3]","decl":"const float vec[3]","default":null},{"type":"int","name":"flags","decl":"int flags","default":null},{"type":"RayType","name":"rtype","decl":"RayType rtype","default":null},{"type":"TraceEntityFilter","name":"filter","decl":"TraceEntityFilter filter","default":null},{"type":"any","name":"data","decl":"any data","default":"0"}]},{"name":"TR_TraceHullFilterEx","docStart":20931,"docEnd":21625,"docs":{"brief":"Starts up a new trace hull using a new trace result and a customized\ntrace ray filter.\n\nCalling TR_Trace*Filter or TR_Trace*FilterEx from inside a filter\nfunction is currently not allowed and may not work.","tags":[{"tag":"","text":"Starts up a new trace hull using a new trace result and a customized\ntrace ray filter.\n\nCalling TR_Trace*Filter or TR_Trace*FilterEx from inside a filter\nfunction is currently not allowed and may not work."},{"tag":"param:pos","text":"Starting position of the ray."},{"tag":"param:vec","text":"Ending position of the ray."},{"tag":"param:mins","text":"Hull minimum size."},{"tag":"param:maxs","text":"Hull maximum size."},{"tag":"param:flags","text":"Trace flags."},{"tag":"param:filter","text":"Function to use as a filter."},{"tag":"param:data","text":"Arbitrary data value to pass through to the filter function."},{"tag":"return","text":"Ray trace handle, which must be closed via CloseHandle()."}]},"kind":"native","returnType":"Handle","arguments":[{"type":"const float","name":"pos[3]","decl":"const float pos[3]","default":null},{"type":"const float","name":"vec[3]","decl":"const float vec[3]","default":null},{"type":"const float","name":"mins[3]","decl":"const float mins[3]","default":null},{"type":"const float","name":"maxs[3]","decl":"const float maxs[3]","default":null},{"type":"int","name":"flags","decl":"int flags","default":null},{"type":"TraceEntityFilter","name":"filter","decl":"TraceEntityFilter filter","default":null},{"type":"any","name":"data","decl":"any data","default":"0"}]},{"name":"TR_ClipRayToEntityEx","docStart":22013,"docEnd":22482,"docs":{"brief":"Clips a ray to a particular entity.","tags":[{"tag":"","text":"Clips a ray to a particular entity."},{"tag":"param:pos","text":"Starting position of the ray."},{"tag":"param:vec","text":"Depending on RayType, it will be used as the ending\npoint, or the direction angle."},{"tag":"param:flags","text":"Trace flags."},{"tag":"param:rtype","text":"Method to calculate the ray direction."},{"tag":"param:entity","text":"Entity to clip to."},{"tag":"return","text":"Ray trace handle, which must be closed via CloseHandle()."}]},"kind":"native","returnType":"Handle","arguments":[{"type":"const float","name":"pos[3]","decl":"const float pos[3]","default":null},{"type":"const float","name":"vec[3]","decl":"const float vec[3]","default":null},{"type":"int","name":"flags","decl":"int flags","default":null},{"type":"RayType","name":"rtype","decl":"RayType rtype","default":null},{"type":"int","name":"entity","decl":"int entity","default":null}]},{"name":"TR_ClipRayHullToEntityEx","docStart":22745,"docEnd":23163,"docs":{"brief":"Clips a ray hull to a particular entity.","tags":[{"tag":"","text":"Clips a ray hull to a particular entity."},{"tag":"param:pos","text":"Starting position of the ray."},{"tag":"param:vec","text":"Ending position of the ray."},{"tag":"param:mins","text":"Hull minimum size."},{"tag":"param:maxs","text":"Hull maximum size."},{"tag":"param:flags","text":"Trace flags."},{"tag":"param:entity","text":"Entity to clip to."},{"tag":"return","text":"Ray trace handle, which must be closed via CloseHandle()."}]},"kind":"native","returnType":"Handle","arguments":[{"type":"const float","name":"pos[3]","decl":"const float pos[3]","default":null},{"type":"const float","name":"vec[3]","decl":"const float vec[3]","default":null},{"type":"const float","name":"mins[3]","decl":"const float mins[3]","default":null},{"type":"const float","name":"maxs[3]","decl":"const float maxs[3]","default":null},{"type":"int","name":"flags","decl":"int flags","default":null},{"type":"int","name":"entity","decl":"int entity","default":null}]},{"name":"TR_ClipCurrentRayToEntityEx","docStart":23513,"docEnd":23757,"docs":{"brief":"Clips the current global ray (or hull) to a particular entity.","tags":[{"tag":"","text":"Clips the current global ray (or hull) to a particular entity."},{"tag":"param:flags","text":"Trace flags."},{"tag":"param:entity","text":"Entity to clip to."},{"tag":"return","text":"Ray trace handle, which must be closed via CloseHandle()."}]},"kind":"native","returnType":"Handle","arguments":[{"type":"int","name":"flags","decl":"int flags","default":null},{"type":"int","name":"entity","decl":"int entity","default":null}]},{"name":"TR_GetFraction","docStart":23828,"docEnd":24105,"docs":{"brief":"Returns the time fraction from a trace result (1.0 means no collision).","tags":[{"tag":"","text":"Returns the time fraction from a trace result (1.0 means no collision)."},{"tag":"param:hndl","text":"A trace Handle, or INVALID_HANDLE to use a global trace result."},{"tag":"return","text":"Time fraction value of the trace."},{"tag":"error","text":"Invalid Handle."}]},"kind":"native","returnType":"float","arguments":[{"type":"Handle","name":"hndl","decl":"Handle hndl","default":"INVALID_HANDLE"}]},{"name":"TR_GetFractionLeftSolid","docStart":24167,"docEnd":24492,"docs":{"brief":"Returns the time fraction from a trace result when it left a solid.\nOnly valid if trace started in solid","tags":[{"tag":"","text":"Returns the time fraction from a trace result when it left a solid.\nOnly valid if trace started in solid"},{"tag":"param:hndl","text":"A trace Handle, or INVALID_HANDLE to use a global trace result."},{"tag":"return","text":"Time fraction left solid value of the trace."},{"tag":"error","text":"Invalid Handle."}]},"kind":"native","returnType":"float","arguments":[{"type":"Handle","name":"hndl","decl":"Handle hndl","default":"INVALID_HANDLE"}]},{"name":"TR_GetStartPosition","docStart":24563,"docEnd":24808,"docs":{"brief":"Returns the starting position of a trace.","tags":[{"tag":"","text":"Returns the starting position of a trace."},{"tag":"param:hndl","text":"A trace Handle, or INVALID_HANDLE to use a global trace result."},{"tag":"param:pos","text":"Vector buffer to store data in."},{"tag":"error","text":"Invalid Handle."}]},"kind":"native","returnType":"void","arguments":[{"type":"Handle","name":"hndl","decl":"Handle hndl","default":null},{"type":"float","name":"pos[3]","decl":"float pos[3]","default":null}]},{"name":"TR_GetEndPosition","docStart":24873,"docEnd":25126,"docs":{"brief":"Returns the collision position of a trace result.","tags":[{"tag":"","text":"Returns the collision position of a trace result."},{"tag":"param:pos","text":"Vector buffer to store data in."},{"tag":"param:hndl","text":"A trace Handle, or INVALID_HANDLE to use a global trace result."},{"tag":"error","text":"Invalid Handle."}]},"kind":"native","returnType":"void","arguments":[{"type":"float","name":"pos[3]","decl":"float pos[3]","default":null},{"type":"Handle","name":"hndl","decl":"Handle hndl","default":"INVALID_HANDLE"}]},{"name":"TR_GetEntityIndex","docStart":25204,"docEnd":25467,"docs":{"brief":"Returns the entity index that collided with the trace.","tags":[{"tag":"","text":"Returns the entity index that collided with the trace."},{"tag":"param:hndl","text":"A trace Handle, or INVALID_HANDLE to use a global trace result."},{"tag":"return","text":"Entity index or -1 for no collision."},{"tag":"error","text":"Invalid Handle."}]},"kind":"native","returnType":"int","arguments":[{"type":"Handle","name":"hndl","decl":"Handle hndl","default":"INVALID_HANDLE"}]},{"name":"TR_GetDisplacementFlags","docStart":25530,"docEnd":25803,"docs":{"brief":"Returns the displacement flags for the surface that was hit. See DISPSURF_FLAG_*.","tags":[{"tag":"","text":"Returns the displacement flags for the surface that was hit. See DISPSURF_FLAG_*."},{"tag":"param:hndl","text":"A trace Handle, or INVALID_HANDLE to use a global trace result."},{"tag":"return","text":"Displacement flags."},{"tag":"error","text":"Invalid Handle."}]},"kind":"native","returnType":"int","arguments":[{"type":"Handle","name":"hndl","decl":"Handle hndl","default":"INVALID_HANDLE"}]},{"name":"TR_GetSurfaceName","docStart":25872,"docEnd":26178,"docs":{"brief":"Returns the name of the surface that was hit.","tags":[{"tag":"","text":"Returns the name of the surface that was hit."},{"tag":"param:hndl","text":"A trace Handle, or INVALID_HANDLE to use a global trace result."},{"tag":"param:buffer","text":"Buffer to store surface name in"},{"tag":"param:maxlen","text":"Maximum length of output buffer"},{"tag":"error","text":"Invalid Handle."}]},"kind":"native","returnType":"void","arguments":[{"type":"Handle","name":"hndl","decl":"Handle hndl","default":null},{"type":"char[]","name":"buffer","decl":"char[] buffer","default":null},{"type":"int","name":"maxlen","decl":"int maxlen","default":null}]},{"name":"TR_GetSurfaceProps","docStart":26254,"docEnd":26506,"docs":{"brief":"Returns the surface properties index of the surface that was hit.","tags":[{"tag":"","text":"Returns the surface properties index of the surface that was hit."},{"tag":"param:hndl","text":"A trace Handle, or INVALID_HANDLE to use a global trace result."},{"tag":"return","text":"Surface props."},{"tag":"error","text":"Invalid Handle."}]},"kind":"native","returnType":"int","arguments":[{"type":"Handle","name":"hndl","decl":"Handle hndl","default":"INVALID_HANDLE"}]},{"name":"TR_GetSurfaceFlags","docStart":26570,"docEnd":26795,"docs":{"brief":"Returns the surface flags. See SURF_*.","tags":[{"tag":"","text":"Returns the surface flags. See SURF_*."},{"tag":"param:hndl","text":"A trace Handle, or INVALID_HANDLE to use a global trace result."},{"tag":"return","text":"Surface flags."},{"tag":"error","text":"Invalid Handle."}]},"kind":"native","returnType":"int","arguments":[{"type":"Handle","name":"hndl","decl":"Handle hndl","default":"INVALID_HANDLE"}]},{"name":"TR_GetPhysicsBone","docStart":26859,"docEnd":27102,"docs":{"brief":"Returns the index of the physics bone that was hit.","tags":[{"tag":"","text":"Returns the index of the physics bone that was hit."},{"tag":"param:hndl","text":"A trace Handle, or INVALID_HANDLE to use a global trace result."},{"tag":"return","text":"Physics bone index."},{"tag":"error","text":"Invalid Handle."}]},"kind":"native","returnType":"int","arguments":[{"type":"Handle","name":"hndl","decl":"Handle hndl","default":"INVALID_HANDLE"}]},{"name":"TR_AllSolid","docStart":27165,"docEnd":27449,"docs":{"brief":"Returns whether the entire trace was in a solid area.","tags":[{"tag":"","text":"Returns whether the entire trace was in a solid area."},{"tag":"param:hndl","text":"A trace Handle, or INVALID_HANDLE to use a global trace result."},{"tag":"return","text":"True if entire trace was in a solid area, otherwise false."},{"tag":"error","text":"Invalid Handle."}]},"kind":"native","returnType":"bool","arguments":[{"type":"Handle","name":"hndl","decl":"Handle hndl","default":"INVALID_HANDLE"}]},{"name":"TR_StartSolid","docStart":27507,"docEnd":27793,"docs":{"brief":"Returns whether the initial point was in a solid area.","tags":[{"tag":"","text":"Returns whether the initial point was in a solid area."},{"tag":"param:hndl","text":"A trace Handle, or INVALID_HANDLE to use a global trace result."},{"tag":"return","text":"True if initial point was in a solid area, otherwise false."},{"tag":"error","text":"Invalid Handle."}]},"kind":"native","returnType":"bool","arguments":[{"type":"Handle","name":"hndl","decl":"Handle hndl","default":"INVALID_HANDLE"}]},{"name":"TR_DidHit","docStart":27853,"docEnd":28134,"docs":{"brief":"Returns if there was any kind of collision along the trace ray.","tags":[{"tag":"","text":"Returns if there was any kind of collision along the trace ray."},{"tag":"param:hndl","text":"A trace Handle, or INVALID_HANDLE to use a global trace result."},{"tag":"return","text":"True if any collision found, otherwise false."},{"tag":"error","text":"Invalid Handle."}]},"kind":"native","returnType":"bool","arguments":[{"type":"Handle","name":"hndl","decl":"Handle hndl","default":"INVALID_HANDLE"}]},{"name":"TR_GetHitGroup","docStart":28190,"docEnd":28436,"docs":{"brief":"Returns in which body hit group the trace collided if any.","tags":[{"tag":"","text":"Returns in which body hit group the trace collided if any."},{"tag":"param:hndl","text":"A trace Handle, or INVALID_HANDLE to use a global trace result."},{"tag":"return","text":"Body hit group."},{"tag":"error","text":"Invalid Handle."}]},"kind":"native","returnType":"int","arguments":[{"type":"Handle","name":"hndl","decl":"Handle hndl","default":"INVALID_HANDLE"}]},{"name":"TR_GetHitBoxIndex","docStart":28496,"docEnd":28914,"docs":{"brief":"Returns in which hitbox the trace collided if any.\n\nNote: if the entity that collided with the trace is the world entity,\nthen this function doesn't return an hitbox index but a static prop index.","tags":[{"tag":"","text":"Returns in which hitbox the trace collided if any.\n\nNote: if the entity that collided with the trace is the world entity,\nthen this function doesn't return an hitbox index but a static prop index."},{"tag":"param:hndl","text":"A trace Handle, or INVALID_HANDLE to use a global trace result."},{"tag":"return","text":"Hitbox index (Or static prop index)."},{"tag":"error","text":"Invalid Handle."}]},"kind":"native","returnType":"int","arguments":[{"type":"Handle","name":"hndl","decl":"Handle hndl","default":"INVALID_HANDLE"}]},{"name":"TR_GetPlaneNormal","docStart":28977,"docEnd":29269,"docs":{"brief":"Find the normal vector to the collision plane of a trace.","tags":[{"tag":"","text":"Find the normal vector to the collision plane of a trace."},{"tag":"param:hndl","text":"A trace Handle, or INVALID_HANDLE to use a global trace result."},{"tag":"param:normal","text":"Vector buffer to store the vector normal to the collision plane"},{"tag":"error","text":"Invalid Handle"}]},"kind":"native","returnType":"void","arguments":[{"type":"Handle","name":"hndl","decl":"Handle hndl","default":null},{"type":"float","name":"normal[3]","decl":"float normal[3]","default":null}]},{"name":"TR_PointOutsideWorld","docStart":29335,"docEnd":29528,"docs":{"brief":"Tests a point to see if it's outside any playable area","tags":[{"tag":"","text":"Tests a point to see if it's outside any playable area"},{"tag":"param:pos","text":"Vector buffer to store data in."},{"tag":"return","text":"True if outside world, otherwise false."}]},"kind":"native","returnType":"bool","arguments":[{"type":"float","name":"pos[3]","decl":"float pos[3]","default":null}]}],"methodmaps":[],"enumstructs":[],"constants":[],"enums":[{"name":"RayType","docStart":0,"docEnd":0,"docs":null,"entries":[{"name":"RayType_EndPoint","docStart":9814,"docEnd":9888,"docs":{"brief":"The trace ray will go from the start position to the end position.","tags":[{"tag":"","text":"The trace ray will go from the start position to the end position."}]},"value":null},{"name":"RayType_Infinite","docStart":9911,"docEnd":10002,"docs":{"brief":"The trace ray will go from the start position to infinity using a direction vector.","tags":[{"tag":"","text":"The trace ray will go from the start position to infinity using a direction vector."}]},"value":null}]}],"typesets":[{"name":"TraceEntityFilter","docStart":0,"docEnd":0,"docs":null,"types":[{"docStart":10041,"docEnd":10256,"docs":{"brief":"Called on entity filtering.","tags":[{"tag":"","text":"Called on entity filtering."},{"tag":"param:entity","text":"Entity index."},{"tag":"param:contentsMask","text":"Contents Mask."},{"tag":"return","text":"True to allow the current entity to be hit, otherwise false."}]},"type":"function bool(int entity, int contentsMask)","parsedSignature":{"returnType":"bool","arguments":[{"type":"int","name":"entity","decl":"int entity","default":null},{"type":"int","name":"contentsMask","decl":"int contentsMask","default":null}]}},{"docStart":10309,"docEnd":10571,"docs":{"brief":"Called on entity filtering.","tags":[{"tag":"","text":"Called on entity filtering."},{"tag":"param:entity","text":"Entity index."},{"tag":"param:contentsMask","text":"Contents Mask."},{"tag":"param:data","text":"Data value, if used."},{"tag":"return","text":"True to allow the current entity to be hit, otherwise false."}]},"type":"function bool(int entity, int contentsMask, any data)","parsedSignature":{"returnType":"bool","arguments":[{"type":"int","name":"entity","decl":"int entity","default":null},{"type":"int","name":"contentsMask","decl":"int contentsMask","default":null},{"type":"any","name":"data","decl":"any data","default":null}]}}]},{"name":"TraceEntityEnumerator","docStart":0,"docEnd":0,"docs":null,"types":[{"docStart":10672,"docEnd":10863,"docs":{"brief":"Called for each entity enumerated with EnumerateEntities*.","tags":[{"tag":"","text":"Called for each entity enumerated with EnumerateEntities*."},{"tag":"param:entity","text":"Entity index."},{"tag":"return","text":"True to continue enumerating, otherwise false."}]},"type":"function bool(int entity)","parsedSignature":{"returnType":"bool","arguments":[]}},{"docStart":10898,"docEnd":11133,"docs":{"brief":"Called for each entity enumerated with EnumerateEntities*.","tags":[{"tag":"","text":"Called for each entity enumerated with EnumerateEntities*."},{"tag":"param:entity","text":"Entity index."},{"tag":"param:data","text":"Data value, if used."},{"tag":"return","text":"True to continue enumerating, otherwise false."}]},"type":"function bool(int entity, any data)","parsedSignature":{"returnType":"bool","arguments":[{"type":"int","name":"entity","decl":"int entity","default":null},{"type":"any","name":"data","decl":"any data","default":null}]}}]}],"typedefs":[]}