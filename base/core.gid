{"functions":[{"name":"IsNullVector","docStart":4872,"docEnd":5030,"docs":{"brief":"Check if the given vector is the NULL_VECTOR.","tags":[{"tag":"","text":"Check if the given vector is the NULL_VECTOR."},{"tag":"param:vec","text":"The vector to test."},{"tag":"return","text":"True if NULL_VECTOR, false otherwise."}]},"kind":"native","returnType":"bool","arguments":[{"type":"const float","name":"vec[3]","decl":"const float vec[3]","default":null}]},{"name":"IsNullString","docStart":5081,"docEnd":5239,"docs":{"brief":"Check if the given string is the NULL_STRING.","tags":[{"tag":"","text":"Check if the given string is the NULL_STRING."},{"tag":"param:str","text":"The string to test."},{"tag":"return","text":"True if NULL_STRING, false otherwise."}]},"kind":"native","returnType":"bool","arguments":[{"type":"const char[]","name":"str","decl":"const char[] str","default":null}]},{"name":"VerifyCoreVersion","docStart":0,"docEnd":0,"docs":null,"kind":"native","returnType":"int","arguments":[]},{"name":"MarkNativeAsOptional","docStart":5473,"docEnd":5709,"docs":{"brief":"Sets a native as optional, such that if it is unloaded, removed,\nor otherwise non-existent, the plugin will still work.  Calling\nremoved natives results in a run-time error.","tags":[{"tag":"","text":"Sets a native as optional, such that if it is unloaded, removed,\nor otherwise non-existent, the plugin will still work.  Calling\nremoved natives results in a run-time error."},{"tag":"param:name","text":"Native name."}]},"kind":"native","returnType":"void","arguments":[{"type":"const char[]","name":"name","decl":"const char[] name","default":null}]},{"name":"__ext_core_SetNTVOptional","docStart":0,"docEnd":0,"docs":null,"kind":"public","returnType":"void","arguments":[]}],"methodmaps":[],"enumstructs":[{"name":"PlVers","docStart":0,"docEnd":0,"docs":null,"methods":[],"fields":[{"name":"version","docStart":0,"docEnd":0,"docs":null,"type":"int"},{"name":"filevers","docStart":0,"docEnd":0,"docs":null,"type":"const char[]"},{"name":"date","docStart":0,"docEnd":0,"docs":null,"type":"const char[]"},{"name":"time","docStart":0,"docEnd":0,"docs":null,"type":"const char[]"}]},{"name":"Extension","docStart":4068,"docEnd":4141,"docs":{"brief":"Defines how an extension must expose itself for autoloading.","tags":[{"tag":"","text":"Defines how an extension must expose itself for autoloading."}]},"methods":[],"fields":[{"name":"name","docStart":4193,"docEnd":4211,"docs":{"brief":"Short name","tags":[{"tag":"","text":"Short name"}]},"type":"const char[]"},{"name":"file","docStart":4242,"docEnd":4267,"docs":{"brief":"Default file name","tags":[{"tag":"","text":"Default file name"}]},"type":"const char[]"},{"name":"autoload","docStart":4298,"docEnd":4333,"docs":{"brief":"Whether or not to auto-load","tags":[{"tag":"","text":"Whether or not to auto-load"}]},"type":"bool"},{"name":"required","docStart":4364,"docEnd":4397,"docs":{"brief":"Whether or not to require","tags":[{"tag":"","text":"Whether or not to require"}]},"type":"bool"}]},{"name":"SharedPlugin","docStart":4405,"docEnd":4479,"docs":{"brief":"Defines how a plugin must expose itself for native requiring.","tags":[{"tag":"","text":"Defines how a plugin must expose itself for native requiring."}]},"methods":[],"fields":[{"name":"name","docStart":4534,"docEnd":4552,"docs":{"brief":"Short name","tags":[{"tag":"","text":"Short name"}]},"type":"const char[]"},{"name":"file","docStart":4583,"docEnd":4600,"docs":{"brief":"File name","tags":[{"tag":"","text":"File name"}]},"type":"const char[]"},{"name":"required","docStart":4631,"docEnd":4664,"docs":{"brief":"Whether or not to require","tags":[{"tag":"","text":"Whether or not to require"}]},"type":"bool"}]}],"constants":[],"enums":[{"name":"Action","docStart":1913,"docEnd":1970,"docs":{"brief":"Specifies what to do after a hook completes.","tags":[{"tag":"","text":"Specifies what to do after a hook completes."}]},"entries":[{"name":"Plugin_Continue","docStart":2013,"docEnd":2054,"docs":{"brief":"Continue with the original action","tags":[{"tag":"","text":"Continue with the original action"}]},"value":"0"},{"name":"Plugin_Changed","docStart":2081,"docEnd":2143,"docs":{"brief":"Inputs or outputs have been overridden with new values","tags":[{"tag":"","text":"Inputs or outputs have been overridden with new values"}]},"value":"1"},{"name":"Plugin_Handled","docStart":2170,"docEnd":2222,"docs":{"brief":"Handle the action at the end (don't call it)","tags":[{"tag":"","text":"Handle the action at the end (don't call it)"}]},"value":"3"},{"name":"Plugin_Stop","docStart":2249,"docEnd":2312,"docs":{"brief":"Immediately stop the hook chain and handle the original","tags":[{"tag":"","text":"Immediately stop the hook chain and handle the original"}]},"value":"4"}]},{"name":"Identity","docStart":2320,"docEnd":2358,"docs":{"brief":"Specifies identity types.","tags":[{"tag":"","text":"Specifies identity types."}]},"entries":[{"name":"Identity_Core","docStart":0,"docEnd":0,"docs":null,"value":"0"},{"name":"Identity_Extension","docStart":0,"docEnd":0,"docs":null,"value":"1"},{"name":"Identity_Plugin","docStart":0,"docEnd":0,"docs":null,"value":"2"}]},{"name":"PluginStatus","docStart":2600,"docEnd":2634,"docs":{"brief":"Plugin status values.","tags":[{"tag":"","text":"Plugin status values."}]},"entries":[{"name":"Plugin_Running","docStart":2683,"docEnd":2764,"docs":{"brief":"Plugin is running\nAll states below are \"temporarily\" unexecutable","tags":[{"tag":"","text":"Plugin is running"},{"tag":"","text":"All states below are \"temporarily\" unexecutable"}]},"value":"0"},{"name":"Plugin_Paused","docStart":2791,"docEnd":2826,"docs":{"brief":"Plugin is loaded but paused","tags":[{"tag":"","text":"Plugin is loaded but paused"}]},"value":null},{"name":"Plugin_Error","docStart":2853,"docEnd":2945,"docs":{"brief":"Plugin is loaded but errored/locked\nAll states below do not have all natives","tags":[{"tag":"","text":"Plugin is loaded but errored/locked"},{"tag":"","text":"All states below do not have all natives"}]},"value":null},{"name":"Plugin_Loaded","docStart":2972,"docEnd":3026,"docs":{"brief":"Plugin has passed loading and can be finalized","tags":[{"tag":"","text":"Plugin has passed loading and can be finalized"}]},"value":null},{"name":"Plugin_Failed","docStart":3053,"docEnd":3087,"docs":{"brief":"Plugin has a fatal failure","tags":[{"tag":"","text":"Plugin has a fatal failure"}]},"value":null},{"name":"Plugin_Created","docStart":3114,"docEnd":3159,"docs":{"brief":"Plugin is created but not initialized","tags":[{"tag":"","text":"Plugin is created but not initialized"}]},"value":null},{"name":"Plugin_Uncompiled","docStart":3186,"docEnd":3231,"docs":{"brief":"Plugin is not yet compiled by the JIT","tags":[{"tag":"","text":"Plugin is not yet compiled by the JIT"}]},"value":null},{"name":"Plugin_BadLoad","docStart":3258,"docEnd":3287,"docs":{"brief":"Plugin failed to load","tags":[{"tag":"","text":"Plugin failed to load"}]},"value":null},{"name":"Plugin_Evicted","docStart":3314,"docEnd":3357,"docs":{"brief":"Plugin was unloaded due to an error","tags":[{"tag":"","text":"Plugin was unloaded due to an error"}]},"value":null}]},{"name":"PluginInfo","docStart":3365,"docEnd":3799,"docs":{"brief":"Plugin information properties. Plugins can declare a global variable with\ntheir info. Example,\n\npublic Plugin myinfo = {\nname = \"Admin Help\",\nauthor = \"AlliedModders LLC\",\ndescription = \"Display command information\",\nversion = \"1.0\",\nurl = \"http://www.sourcemod.net/\"\n};\n\nSourceMod will display this information when a user inspects plugins in the\nconsole.","tags":[{"tag":"","text":"Plugin information properties. Plugins can declare a global variable with\ntheir info. Example,\n\npublic Plugin myinfo = {\nname = \"Admin Help\",\nauthor = \"AlliedModders LLC\",\ndescription = \"Display command information\",\nversion = \"1.0\",\nurl = \"http://www.sourcemod.net/\"\n};\n\nSourceMod will display this information when a user inspects plugins in the\nconsole."}]},"entries":[{"name":"PlInfo_Name","docStart":3846,"docEnd":3865,"docs":{"brief":"Plugin name","tags":[{"tag":"","text":"Plugin name"}]},"value":null},{"name":"PlInfo_Author","docStart":3892,"docEnd":3913,"docs":{"brief":"Plugin author","tags":[{"tag":"","text":"Plugin author"}]},"value":null},{"name":"PlInfo_Description","docStart":3940,"docEnd":3966,"docs":{"brief":"Plugin description","tags":[{"tag":"","text":"Plugin description"}]},"value":null},{"name":"PlInfo_Version","docStart":3993,"docEnd":4015,"docs":{"brief":"Plugin version","tags":[{"tag":"","text":"Plugin version"}]},"value":null},{"name":"PlInfo_URL","docStart":4042,"docEnd":4060,"docs":{"brief":"Plugin URL","tags":[{"tag":"","text":"Plugin URL"}]},"value":null}]}],"typesets":[],"typedefs":[]}