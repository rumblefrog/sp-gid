{"functions":[{"name":"StartPrepSDKCall","docStart":4142,"docEnd":4258,"docs":{"brief":"Starts the preparation of an SDK call.","tags":[{"tag":"","text":"Starts the preparation of an SDK call."},{"tag":"param:type","text":"Type of function call this will be."}]},"kind":"native","returnType":"void","arguments":[{"type":"SDKCallType","name":"type","decl":"SDKCallType type","default":null}]},{"name":"PrepSDKCall_SetVirtual","docStart":4311,"docEnd":4430,"docs":{"brief":"Sets the virtual index of the SDK call if it is virtual.","tags":[{"tag":"","text":"Sets the virtual index of the SDK call if it is virtual."},{"tag":"param:vtblidx","text":"Virtual table index."}]},"kind":"native","returnType":"void","arguments":[{"type":"int","name":"vtblidx","decl":"int vtblidx","default":null}]},{"name":"PrepSDKCall_SetSignature","docStart":4484,"docEnd":5003,"docs":{"brief":"Finds an address in a library and sets it as the address to use for the SDK call.","tags":[{"tag":"","text":"Finds an address in a library and sets it as the address to use for the SDK call."},{"tag":"param:lib","text":"Library to use."},{"tag":"param:signature","text":"Binary data to search for in the library.  If it starts with '@',\nthe bytes parameter is ignored and the signature is interpreted\nas a symbol lookup in the library."},{"tag":"param:bytes","text":"Number of bytes in the binary search string."},{"tag":"return","text":"True on success, false if nothing was found."}]},"kind":"native","returnType":"bool","arguments":[{"type":"SDKLibrary","name":"lib","decl":"SDKLibrary lib","default":null},{"type":"const char[]","name":"signature","decl":"const char[] signature","default":null},{"type":"int","name":"bytes","decl":"int bytes","default":null}]},{"name":"PrepSDKCall_SetAddress","docStart":5097,"docEnd":5276,"docs":{"brief":"Uses the given function address for the SDK call.","tags":[{"tag":"","text":"Uses the given function address for the SDK call."},{"tag":"param:addr","text":"Address of function to use."},{"tag":"return","text":"True on success, false on failure."}]},"kind":"native","returnType":"bool","arguments":[{"type":"Address","name":"addr","decl":"Address addr","default":null}]},{"name":"PrepSDKCall_SetFromConf","docStart":5331,"docEnd":5753,"docs":{"brief":"Finds an address or virtual function index in a GameConfig file and sets it as\nthe calling information for the SDK call.","tags":[{"tag":"","text":"Finds an address or virtual function index in a GameConfig file and sets it as\nthe calling information for the SDK call."},{"tag":"param:gameconf","text":"GameConfig Handle, or INVALID_HANDLE to use sdktools.games.txt."},{"tag":"param:source","text":"Whether to look in Offsets or Signatures."},{"tag":"param:name","text":"Name of the property to find."},{"tag":"return","text":"True on success, false if nothing was found."}]},"kind":"native","returnType":"bool","arguments":[{"type":"Handle","name":"gameconf","decl":"Handle gameconf","default":null},{"type":"SDKFuncConfSource","name":"source","decl":"SDKFuncConfSource source","default":null},{"type":"const char[]","name":"name","decl":"const char[] name","default":null}]},{"name":"PrepSDKCall_SetReturnInfo","docStart":5857,"docEnd":6317,"docs":{"brief":"Sets the return information of an SDK call.  Do not call this if there is no return data.\nThis must be called if there is a return value (i.e. it is not necessarily safe to ignore\nthe data).","tags":[{"tag":"","text":"Sets the return information of an SDK call.  Do not call this if there is no return data.\nThis must be called if there is a return value (i.e. it is not necessarily safe to ignore\nthe data)."},{"tag":"param:type","text":"Data type to convert to/from."},{"tag":"param:pass","text":"How the data is passed in C++."},{"tag":"param:decflags","text":"Flags on decoding from the plugin to C++."},{"tag":"param:encflags","text":"Flags on encoding from C++ to the plugin."}]},"kind":"native","returnType":"void","arguments":[{"type":"SDKType","name":"type","decl":"SDKType type","default":null},{"type":"SDKPassMethod","name":"pass","decl":"SDKPassMethod pass","default":null},{"type":"int","name":"decflags","decl":"int decflags","default":"0"},{"type":"int","name":"encflags","decl":"int encflags","default":"0"}]},{"name":"PrepSDKCall_AddParameter","docStart":6427,"docEnd":6782,"docs":{"brief":"Adds a parameter to the calling convention.  This should be called in normal ascending order.","tags":[{"tag":"","text":"Adds a parameter to the calling convention.  This should be called in normal ascending order."},{"tag":"param:type","text":"Data type to convert to/from."},{"tag":"param:pass","text":"How the data is passed in C++."},{"tag":"param:decflags","text":"Flags on decoding from the plugin to C++."},{"tag":"param:encflags","text":"Flags on encoding from C++ to the plugin."}]},"kind":"native","returnType":"void","arguments":[{"type":"SDKType","name":"type","decl":"SDKType type","default":null},{"type":"SDKPassMethod","name":"pass","decl":"SDKPassMethod pass","default":null},{"type":"int","name":"decflags","decl":"int decflags","default":"0"},{"type":"int","name":"encflags","decl":"int encflags","default":"0"}]},{"name":"EndPrepSDKCall","docStart":6891,"docEnd":7063,"docs":{"brief":"Finalizes an SDK call preparation and returns the resultant Handle.","tags":[{"tag":"","text":"Finalizes an SDK call preparation and returns the resultant Handle."},{"tag":"return","text":"A new SDKCall Handle on success, or INVALID_HANDLE on failure."}]},"kind":"native","returnType":"Handle","arguments":[]},{"name":"SDKCall","docStart":7100,"docEnd":8151,"docs":{"brief":"Calls an SDK function with the given parameters.\n\nIf the call type is Entity or Player, the index MUST ALWAYS be the FIRST parameter passed.\nIf the call type is GameRules, then nothing special needs to be passed.\nIf the return value is a Vector or QAngles, the SECOND parameter must be a Float[3].\nIf the return value is a string, the THIRD parameter must be a String buffer, and the\nFOURTH parameter must be the maximum length.\nAll parameters must be passed after the above is followed.  Failure to follow these\nrules will result in crashes or wildly unexpected behavior!\n\nIf the return value is a float or integer, the return value will be this value.\nIf the return value is a CBaseEntity, CBasePlayer, or edict, the return value will\nalways be the entity index, or -1 for NULL.","tags":[{"tag":"","text":"Calls an SDK function with the given parameters.\n\nIf the call type is Entity or Player, the index MUST ALWAYS be the FIRST parameter passed.\nIf the call type is GameRules, then nothing special needs to be passed.\nIf the return value is a Vector or QAngles, the SECOND parameter must be a Float[3].\nIf the return value is a string, the THIRD parameter must be a String buffer, and the\nFOURTH parameter must be the maximum length.\nAll parameters must be passed after the above is followed.  Failure to follow these\nrules will result in crashes or wildly unexpected behavior!\n\nIf the return value is a float or integer, the return value will be this value.\nIf the return value is a CBaseEntity, CBasePlayer, or edict, the return value will\nalways be the entity index, or -1 for NULL."},{"tag":"param:call","text":"SDKCall Handle."},{"tag":"param:...","text":"Call Parameters."},{"tag":"return","text":"Simple return value, if any."},{"tag":"error","text":"Invalid Handle or internal decoding error."}]},"kind":"native","returnType":"any","arguments":[{"type":"Handle","name":"call","decl":"Handle call","default":null},{"type":"any","name":"...","decl":"any...","default":null}]},{"name":"GetPlayerResourceEntity","docStart":8198,"docEnd":8348,"docs":{"brief":"Returns the entity index of the player resource/manager entity.","tags":[{"tag":"","text":"Returns the entity index of the player resource/manager entity."},{"tag":"return","text":"Index of resource entity or -1 if not found."}]},"kind":"native","returnType":"int","arguments":[]}],"methodmaps":[],"enumstructs":[],"constants":[],"enums":[{"name":"SDKCallType","docStart":0,"docEnd":0,"docs":null,"entries":[{"name":"SDKCall_Static","docStart":2173,"docEnd":2192,"docs":{"brief":"Static call","tags":[{"tag":"","text":"Static call"}]},"value":null},{"name":"SDKCall_Entity","docStart":2219,"docEnd":2243,"docs":{"brief":"CBaseEntity call","tags":[{"tag":"","text":"CBaseEntity call"}]},"value":null},{"name":"SDKCall_Player","docStart":2270,"docEnd":2294,"docs":{"brief":"CBasePlayer call","tags":[{"tag":"","text":"CBasePlayer call"}]},"value":null},{"name":"SDKCall_GameRules","docStart":2321,"docEnd":2344,"docs":{"brief":"CGameRules call","tags":[{"tag":"","text":"CGameRules call"}]},"value":null},{"name":"SDKCall_EntityList","docStart":2371,"docEnd":2401,"docs":{"brief":"CGlobalEntityList call","tags":[{"tag":"","text":"CGlobalEntityList call"}]},"value":null},{"name":"SDKCall_Raw","docStart":2428,"docEnd":2476,"docs":{"brief":"|this| pointer with an arbitrary address","tags":[{"tag":"","text":"|this| pointer with an arbitrary address"}]},"value":null}]},{"name":"SDKLibrary","docStart":0,"docEnd":0,"docs":null,"entries":[{"name":"SDKLibrary_Server","docStart":2529,"docEnd":2562,"docs":{"brief":"server.dll/server_i486.so","tags":[{"tag":"","text":"server.dll/server_i486.so"}]},"value":null},{"name":"SDKLibrary_Engine","docStart":2589,"docEnd":2619,"docs":{"brief":"engine.dll/engine_*.so","tags":[{"tag":"","text":"engine.dll/engine_*.so"}]},"value":null}]},{"name":"SDKFuncConfSource","docStart":0,"docEnd":0,"docs":null,"entries":[{"name":"SDKConf_Virtual","docStart":2679,"docEnd":2732,"docs":{"brief":"Read a virtual index from the Offsets section","tags":[{"tag":"","text":"Read a virtual index from the Offsets section"}]},"value":"0"},{"name":"SDKConf_Signature","docStart":2759,"docEnd":2811,"docs":{"brief":"Read a signature from the Signatures section","tags":[{"tag":"","text":"Read a signature from the Signatures section"}]},"value":"1"},{"name":"SDKConf_Address","docStart":2838,"docEnd":2888,"docs":{"brief":"Read an address from the Addresses section","tags":[{"tag":"","text":"Read an address from the Addresses section"}]},"value":"2"}]},{"name":"SDKType","docStart":0,"docEnd":0,"docs":null,"entries":[{"name":"SDKType_CBaseEntity","docStart":2938,"docEnd":2977,"docs":{"brief":"CBaseEntity (always as pointer)","tags":[{"tag":"","text":"CBaseEntity (always as pointer)"}]},"value":null},{"name":"SDKType_CBasePlayer","docStart":3004,"docEnd":3043,"docs":{"brief":"CBasePlayer (always as pointer)","tags":[{"tag":"","text":"CBasePlayer (always as pointer)"}]},"value":null},{"name":"SDKType_Vector","docStart":3070,"docEnd":3111,"docs":{"brief":"Vector (pointer, byval, or byref)","tags":[{"tag":"","text":"Vector (pointer, byval, or byref)"}]},"value":null},{"name":"SDKType_QAngle","docStart":3138,"docEnd":3180,"docs":{"brief":"QAngles (pointer, byval, or byref)","tags":[{"tag":"","text":"QAngles (pointer, byval, or byref)"}]},"value":null},{"name":"SDKType_PlainOldData","docStart":3207,"docEnd":3249,"docs":{"brief":"Integer/generic data <=32bit (any)","tags":[{"tag":"","text":"Integer/generic data <=32bit (any)"}]},"value":null},{"name":"SDKType_Float","docStart":3276,"docEnd":3295,"docs":{"brief":"Float (any)","tags":[{"tag":"","text":"Float (any)"}]},"value":null},{"name":"SDKType_Edict","docStart":3322,"docEnd":3357,"docs":{"brief":"edict_t (always as pointer)","tags":[{"tag":"","text":"edict_t (always as pointer)"}]},"value":null},{"name":"SDKType_String","docStart":3384,"docEnd":3434,"docs":{"brief":"NULL-terminated string (always as pointer)","tags":[{"tag":"","text":"NULL-terminated string (always as pointer)"}]},"value":null},{"name":"SDKType_Bool","docStart":3461,"docEnd":3482,"docs":{"brief":"Boolean (any)","tags":[{"tag":"","text":"Boolean (any)"}]},"value":null}]},{"name":"SDKPassMethod","docStart":0,"docEnd":0,"docs":null,"entries":[{"name":"SDKPass_Pointer","docStart":3538,"docEnd":3563,"docs":{"brief":"Pass as a pointer","tags":[{"tag":"","text":"Pass as a pointer"}]},"value":null},{"name":"SDKPass_Plain","docStart":3590,"docEnd":3616,"docs":{"brief":"Pass as plain data","tags":[{"tag":"","text":"Pass as plain data"}]},"value":null},{"name":"SDKPass_ByValue","docStart":3643,"docEnd":3674,"docs":{"brief":"Pass an object by value","tags":[{"tag":"","text":"Pass an object by value"}]},"value":null},{"name":"SDKPass_ByRef","docStart":3701,"docEnd":3736,"docs":{"brief":"Pass an object by reference","tags":[{"tag":"","text":"Pass an object by reference"}]},"value":null}]}],"typesets":[],"typedefs":[]}