{"functions":[{"name":"curl_easy_init","docStart":6505,"docEnd":6609,"docs":{"brief":"Create a curl handle","tags":[{"tag":"","text":"Create a curl handle"}]},"kind":"native","returnType":"Handle","arguments":[]},{"name":"curl_easy_setopt_string","docStart":6643,"docEnd":7025,"docs":{"brief":"Set a curl option for CURLOPTTYPE_OBJECTPOINT type\n","tags":[{"tag":"","text":"Set a curl option for CURLOPTTYPE_OBJECTPOINT type\n"}]},"kind":"native","returnType":"bool","arguments":[{"type":"Handle","name":"hndl","decl":"Handle hndl","default":null},{"type":"CURLoption","name":"opt","decl":"CURLoption opt","default":null},{"type":"const char[]","name":"buffer","decl":"const char[] buffer","default":null}]},{"name":"curl_easy_setopt_int","docStart":7114,"docEnd":7489,"docs":{"brief":"Set a curl option for CURLOPTTYPE_LONG type\n","tags":[{"tag":"","text":"Set a curl option for CURLOPTTYPE_LONG type\n"}]},"kind":"native","returnType":"bool","arguments":[{"type":"Handle","name":"hndl","decl":"Handle hndl","default":null},{"type":"CURLoption","name":"opt","decl":"CURLoption opt","default":null},{"type":"int","name":"value","decl":"int value","default":null}]},{"name":"curl_easy_setopt_int_array","docStart":7565,"docEnd":8024,"docs":{"brief":"Set a curl option for CURLOPTTYPE_LONG type\nnew opt[][2] = {\n{_ CURLOPT_NOPROGRESS,1},\n{_ CURLOPT_VERBOSE,0}\n};\n","tags":[{"tag":"","text":"Set a curl option for CURLOPTTYPE_LONG type\nnew opt[][2] = {\n{_ CURLOPT_NOPROGRESS,1},\n{_ CURLOPT_VERBOSE,0}\n};\n"}]},"kind":"native","returnType":"bool","arguments":[{"type":"Handle","name":"hndl","decl":"Handle hndl","default":null},{"type":"int[][]","name":"array","decl":"int[][] array","default":null},{"type":"int","name":"array_size","decl":"int array_size","default":null}]},{"name":"curl_easy_setopt_int64","docStart":8128,"docEnd":8504,"docs":{"brief":"Set a curl option for CURLOPTTYPE_OFF_T type\n","tags":[{"tag":"","text":"Set a curl option for CURLOPTTYPE_OFF_T type\n"}]},"kind":"native","returnType":"bool","arguments":[{"type":"Handle","name":"hndl","decl":"Handle hndl","default":null},{"type":"CURLoption","name":"opt","decl":"CURLoption opt","default":null},{"type":"const char","name":"buffer","decl":"const char buffer","default":null}]},{"name":"curl_easy_setopt_handle","docStart":8590,"docEnd":9085,"docs":{"brief":"Set a curl option for CURLOPTTYPE_OBJECTPOINT type\ncurl_OpenFile()\ncurl_httppost()\ncurl_slist()\n","tags":[{"tag":"","text":"Set a curl option for CURLOPTTYPE_OBJECTPOINT type\ncurl_OpenFile()\ncurl_httppost()\ncurl_slist()\n"}]},"kind":"native","returnType":"bool","arguments":[{"type":"Handle","name":"hndl","decl":"Handle hndl","default":null},{"type":"CURLoption","name":"opt","decl":"CURLoption opt","default":null},{"type":"Handle","name":"other_hndl","decl":"Handle other_hndl","default":null}]},{"name":"curl_easy_setopt_function","docStart":9172,"docEnd":9627,"docs":{"brief":"Set a curl option for CURLOPTTYPE_FUNCTIONPOINT type\n","tags":[{"tag":"","text":"Set a curl option for CURLOPTTYPE_FUNCTIONPOINT type\n"}]},"kind":"native","returnType":"bool","arguments":[{"type":"Handle","name":"hndl","decl":"Handle hndl","default":null},{"type":"CURLoption","name":"opt","decl":"CURLoption opt","default":null},{"type":"CURL_Function_CB","name":"callback","decl":"CURL_Function_CB callback","default":null},{"type":"any","name":"value","decl":"any value","default":"0"}]},{"name":"curl_load_opt","docStart":9737,"docEnd":10034,"docs":{"brief":"Load all CURLoption to curl Handle\nUsing curl_easy_perform_thread() will load option in thread\nUse this on curl_easy_perform or check all CURLoption are valid or not\nOnly can use one time for each curl handle","tags":[{"tag":"","text":"Load all CURLoption to curl Handle\nUsing curl_easy_perform_thread() will load option in thread\nUse this on curl_easy_perform or check all CURLoption are valid or not\nOnly can use one time for each curl handle"}]},"kind":"native","returnType":"CURLcode","arguments":[{"type":"Handle","name":"hndl","decl":"Handle hndl","default":null}]},{"name":"curl_easy_perform","docStart":10080,"docEnd":10167,"docs":{"brief":"Perform a file transfer","tags":[{"tag":"","text":"Perform a file transfer"}]},"kind":"native","returnType":"CURLcode","arguments":[{"type":"Handle","name":"hndl","decl":"Handle hndl","default":null}]},{"name":"curl_easy_perform_thread","docStart":10217,"docEnd":10492,"docs":{"brief":"Perform a file transfer, using thread","tags":[{"tag":"","text":"Perform a file transfer, using thread"}]},"kind":"native","returnType":"void","arguments":[{"type":"Handle","name":"hndl","decl":"Handle hndl","default":null},{"type":"CURL_OnComplete","name":"perform_callback","decl":"CURL_OnComplete perform_callback","default":null},{"type":"any","name":"value","decl":"any value","default":"0"}]},{"name":"curl_easy_send_recv","docStart":10592,"docEnd":11240,"docs":{"brief":"Create a send & receive function for a connected curl handle","tags":[{"tag":"","text":"Create a send & receive function for a connected curl handle"}]},"kind":"native","returnType":"void","arguments":[{"type":"Handle","name":"hndl","decl":"Handle hndl","default":null},{"type":"CURL_OnSend","name":"send_callback","decl":"CURL_OnSend send_callback","default":null},{"type":"CURL_OnReceive","name":"receive_callback","decl":"CURL_OnReceive receive_callback","default":null},{"type":"CURL_OnComplete","name":"complete_callback","decl":"CURL_OnComplete complete_callback","default":null},{"type":"SendRecv_Act","name":"act","decl":"SendRecv_Act act","default":null},{"type":"int","name":"send_timeout","decl":"int send_timeout","default":null},{"type":"int","name":"recv_timeout","decl":"int recv_timeout","default":null},{"type":"int","name":"recv_buffer_Size","decl":"int recv_buffer_Size","default":"1024"},{"type":"any","name":"value","decl":"any value","default":"0"}]},{"name":"curl_send_recv_Signal","docStart":11479,"docEnd":11784,"docs":{"brief":"Send a signal to a send & receive curl handle","tags":[{"tag":"","text":"Send a signal to a send & receive curl handle"}]},"kind":"native","returnType":"bool","arguments":[{"type":"Handle","name":"hndl","decl":"Handle hndl","default":null},{"type":"SendRecv_Act","name":"act","decl":"SendRecv_Act act","default":null}]},{"name":"curl_send_recv_IsWaiting","docStart":11852,"docEnd":12085,"docs":{"brief":"Check send & receive curl handle is Waiting or not","tags":[{"tag":"","text":"Check send & receive curl handle is Waiting or not"}]},"kind":"native","returnType":"bool","arguments":[{"type":"Handle","name":"hndl","decl":"Handle hndl","default":null}]},{"name":"curl_set_send_buffer","docStart":12138,"docEnd":12414,"docs":{"brief":"Send the send buffer for send & receive curl handle","tags":[{"tag":"","text":"Send the send buffer for send & receive curl handle"}]},"kind":"native","returnType":"void","arguments":[{"type":"Handle","name":"hndl","decl":"Handle hndl","default":null},{"type":"const char[]","name":"data","decl":"const char[] data","default":null},{"type":"int","name":"size","decl":"int size","default":"-1"}]},{"name":"curl_set_receive_size","docStart":12495,"docEnd":12698,"docs":{"brief":"Send the receive data size for send & receive curl handle","tags":[{"tag":"","text":"Send the receive data size for send & receive curl handle"}]},"kind":"native","returnType":"void","arguments":[{"type":"Handle","name":"hndl","decl":"Handle hndl","default":null},{"type":"int","name":"size","decl":"int size","default":null}]},{"name":"curl_set_send_timeout","docStart":12758,"docEnd":12997,"docs":{"brief":"Set send timeout for curl_easy_send_recv()","tags":[{"tag":"","text":"Set send timeout for curl_easy_send_recv()"}]},"kind":"native","returnType":"void","arguments":[{"type":"Handle","name":"hndl","decl":"Handle hndl","default":null},{"type":"int","name":"timeout","decl":"int timeout","default":null}]},{"name":"curl_set_recv_timeout","docStart":13060,"docEnd":13305,"docs":{"brief":"Set receive timeout for curl_easy_send_recv()","tags":[{"tag":"","text":"Set receive timeout for curl_easy_send_recv()"}]},"kind":"native","returnType":"void","arguments":[{"type":"Handle","name":"hndl","decl":"Handle hndl","default":null},{"type":"int","name":"timeout","decl":"int timeout","default":null}]},{"name":"curl_get_error_buffer","docStart":13368,"docEnd":13650,"docs":{"brief":"Get CURLOPT_ERRORBUFFER error string in curl handle","tags":[{"tag":"","text":"Get CURLOPT_ERRORBUFFER error string in curl handle"}]},"kind":"native","returnType":"void","arguments":[{"type":"Handle","name":"hndl","decl":"Handle hndl","default":null},{"type":"char[]","name":"buffer","decl":"char[] buffer","default":null},{"type":"int","name":"maxlen","decl":"int maxlen","default":null}]},{"name":"CURLcode","docStart":13727,"docEnd":14129,"docs":{"brief":"Extract information from a curl handle. (CURLINFO_STRING only)","tags":[{"tag":"","text":"Extract information from a curl handle. (CURLINFO_STRING only)"}]},"kind":"native","returnType":"int","arguments":[]},{"name":"CURLcode","docStart":14232,"docEnd":14554,"docs":{"brief":"Extract information from a curl handle. (CURLINFO_LONG, CURLINFO_DOUBLE only)","tags":[{"tag":"","text":"Extract information from a curl handle. (CURLINFO_LONG, CURLINFO_DOUBLE only)"}]},"kind":"native","returnType":"int","arguments":[]},{"name":"curl_easy_escape","docStart":14639,"docEnd":14965,"docs":{"brief":"URL encodes the given string","tags":[{"tag":"","text":"URL encodes the given string"}]},"kind":"native","returnType":"bool","arguments":[{"type":"Handle","name":"hndl","decl":"Handle hndl","default":null},{"type":"const char[]","name":"url","decl":"const char[] url","default":null},{"type":"char[]","name":"buffer","decl":"char[] buffer","default":null},{"type":"int","name":"maxlen","decl":"int maxlen","default":null}]},{"name":"curl_easy_unescape","docStart":15055,"docEnd":15387,"docs":{"brief":"URL decodes the given string","tags":[{"tag":"","text":"URL decodes the given string"}]},"kind":"native","returnType":"int","arguments":[{"type":"Handle","name":"hndl","decl":"Handle hndl","default":null},{"type":"const char[]","name":"url","decl":"const char[] url","default":null},{"type":"char[]","name":"buffer","decl":"char[] buffer","default":null},{"type":"int","name":"maxlen","decl":"int maxlen","default":null}]},{"name":"curl_easy_strerror","docStart":15478,"docEnd":15750,"docs":{"brief":"Return string describing error code","tags":[{"tag":"","text":"Return string describing error code"}]},"kind":"native","returnType":"void","arguments":[{"type":"CURLcode","name":"code","decl":"CURLcode code","default":null},{"type":"char[]","name":"buffer","decl":"char[] buffer","default":null},{"type":"int","name":"maxlen","decl":"int maxlen","default":null}]},{"name":"curl_version","docStart":15826,"docEnd":16031,"docs":{"brief":"Returns the libcurl version string","tags":[{"tag":"","text":"Returns the libcurl version string"}]},"kind":"native","returnType":"void","arguments":[{"type":"char[]","name":"buffer","decl":"char[] buffer","default":null},{"type":"int","name":"maxlen","decl":"int maxlen","default":null}]},{"name":"curl_protocols","docStart":16086,"docEnd":16303,"docs":{"brief":"Returns the libcurl supported protocols string","tags":[{"tag":"","text":"Returns the libcurl supported protocols string"}]},"kind":"native","returnType":"void","arguments":[{"type":"char[]","name":"buffer","decl":"char[] buffer","default":null},{"type":"int","name":"maxlen","decl":"int maxlen","default":null}]},{"name":"curl_features","docStart":16360,"docEnd":16471,"docs":{"brief":"Returns the libcurl supported features","tags":[{"tag":"","text":"Returns the libcurl supported features"}]},"kind":"native","returnType":"int","arguments":[]},{"name":"curl_OpenFile","docStart":16501,"docEnd":16902,"docs":{"brief":"This funcitopn same as Sourcemod OpenFile()\nFor the following CUROPT_* only\nCURLOPT_WRITEDATA\nCURLOPT_HEADERDATA\nCURLOPT_READDATA\nCURLOPT_STDERR\nCURLOPT_INTERLEAVEDATA\n\nShould not share to another threaded curl handle.\n","tags":[{"tag":"","text":"This funcitopn same as Sourcemod OpenFile()\nFor the following CUROPT_* only\nCURLOPT_WRITEDATA\nCURLOPT_HEADERDATA\nCURLOPT_READDATA\nCURLOPT_STDERR\nCURLOPT_INTERLEAVEDATA\n\nShould not share to another threaded curl handle.\n"}]},"kind":"native","returnType":"Handle","arguments":[{"type":"const char[]","name":"file","decl":"const char[] file","default":null},{"type":"const char[]","name":"mode","decl":"const char[] mode","default":null}]},{"name":"curl_httppost","docStart":16972,"docEnd":17208,"docs":{"brief":"Create a curl_httppost struct\nFor the following CUROPT_* only\nCURLOPT_HTTPPOST\nShould not share to another threaded curl handle.\n","tags":[{"tag":"","text":"Create a curl_httppost struct\nFor the following CUROPT_* only\nCURLOPT_HTTPPOST\nShould not share to another threaded curl handle.\n"}]},"kind":"native","returnType":"Handle","arguments":[]},{"name":"curl_formadd","docStart":17241,"docEnd":17577,"docs":{"brief":"Add a section to a multipart/formdata HTTP POST\nCheck enum CURLformoption (cURL_head.inc) to see which option supported\n","tags":[{"tag":"","text":"Add a section to a multipart/formdata HTTP POST\nCheck enum CURLformoption (cURL_head.inc) to see which option supported\n"}]},"kind":"native","returnType":"CURLFORMcode","arguments":[{"type":"Handle","name":"handl","decl":"Handle handl","default":null},{"type":"any...","name":"","decl":"any... ","default":null}]},{"name":"curl_slist","docStart":17636,"docEnd":18027,"docs":{"brief":"Create a curl_slist struct\nFor the following CUROPT_* only\nCURLOPT_QUOTE\nCURLOPT_HTTPHEADER\nCURLOPT_POSTQUOTE\nCURLOPT_TELNETOPTIONS\nCURLOPT_PREQUOTE\nCURLOPT_HTTP200ALIASES\nCURLOPT_MAIL_RCPT\nCURLOPT_RESOLVE\n\nShould not share to another threaded curl handle.\n","tags":[{"tag":"","text":"Create a curl_slist struct\nFor the following CUROPT_* only\nCURLOPT_QUOTE\nCURLOPT_HTTPHEADER\nCURLOPT_POSTQUOTE\nCURLOPT_TELNETOPTIONS\nCURLOPT_PREQUOTE\nCURLOPT_HTTP200ALIASES\nCURLOPT_MAIL_RCPT\nCURLOPT_RESOLVE\n\nShould not share to another threaded curl handle.\n"}]},"kind":"native","returnType":"Handle","arguments":[]},{"name":"curl_slist_append","docStart":18057,"docEnd":18218,"docs":{"brief":"Add a string to an slist","tags":[{"tag":"","text":"Add a string to an slist"}]},"kind":"native","returnType":"void","arguments":[{"type":"Handle","name":"hndl","decl":"Handle hndl","default":null},{"type":"const char[]","name":"buffer","decl":"const char[] buffer","default":null}]},{"name":"curl_hash_file","docStart":18285,"docEnd":18574,"docs":{"brief":"Hash a file","tags":[{"tag":"","text":"Hash a file"}]},"kind":"native","returnType":"void","arguments":[{"type":"const char[]","name":"file","decl":"const char[] file","default":null},{"type":"Openssl_Hash","name":"algorithm","decl":"Openssl_Hash algorithm","default":null},{"type":"Openssl_Hash_Complete","name":"complete_callback","decl":"Openssl_Hash_Complete complete_callback","default":null},{"type":"any","name":"value","decl":"any value","default":"0"}]},{"name":"curl_hash_string","docStart":18701,"docEnd":19061,"docs":{"brief":"Hash a string","tags":[{"tag":"","text":"Hash a string"}]},"kind":"native","returnType":"bool","arguments":[{"type":"const char[]","name":"input","decl":"const char[] input","default":null},{"type":"int","name":"dataSize","decl":"int dataSize","default":null},{"type":"Openssl_Hash","name":"algorithm","decl":"Openssl_Hash algorithm","default":null},{"type":"char[]","name":"buffer","decl":"char[] buffer","default":null},{"type":"int","name":"maxlength","decl":"int maxlength","default":null}]}],"methodmaps":[],"enumstructs":[],"constants":[],"enums":[{"name":"SendRecv_Act","docStart":2648,"docEnd":3089,"docs":{"brief":"The Send & Receive Action\nUsing on CURL_OnSend, CURL_OnReceive\nSendRecv_Act_GOTO_SEND = go to send\nSendRecv_Act_GOTO_RECV = go to receive\nSendRecv_Act_GOTO_WAIT = go to wait\nSendRecv_Act_GOTO_END = end the connection\nSendRecv_Act_GOTO_SEND_NO_WAIT = go to send but no select\nSendRecv_Act_GOTO_RECV_NO_WAIT = go to receive but no select\nTo see how it work? see curl_echo_test.sp & curl_rcon_test.sp examples","tags":[{"tag":"","text":"The Send & Receive Action\nUsing on CURL_OnSend, CURL_OnReceive\nSendRecv_Act_GOTO_SEND = go to send\nSendRecv_Act_GOTO_RECV = go to receive\nSendRecv_Act_GOTO_WAIT = go to wait\nSendRecv_Act_GOTO_END = end the connection\nSendRecv_Act_GOTO_SEND_NO_WAIT = go to send but no select\nSendRecv_Act_GOTO_RECV_NO_WAIT = go to receive but no select\nTo see how it work? see curl_echo_test.sp & curl_rcon_test.sp examples"}]},"entries":[{"name":"SendRecv_Act_NOTHING","docStart":0,"docEnd":0,"docs":null,"value":"0"},{"name":"SendRecv_Act_GOTO_SEND","docStart":0,"docEnd":0,"docs":null,"value":null},{"name":"SendRecv_Act_GOTO_RECV","docStart":0,"docEnd":0,"docs":null,"value":null},{"name":"SendRecv_Act_GOTO_WAIT","docStart":0,"docEnd":0,"docs":null,"value":null},{"name":"SendRecv_Act_GOTO_END","docStart":0,"docEnd":0,"docs":null,"value":null},{"name":"SendRecv_Act_GOTO_SEND_NO_WAIT","docStart":0,"docEnd":0,"docs":null,"value":null},{"name":"SendRecv_Act_GOTO_RECV_NO_WAIT","docStart":0,"docEnd":0,"docs":null,"value":null},{"name":"SendRecv_Act_LAST","docStart":0,"docEnd":0,"docs":null,"value":null}]},{"name":"Openssl_Hash","docStart":3328,"docEnd":3385,"docs":{"brief":"Hash type for curl_hash_file, curl_hash_string","tags":[{"tag":"","text":"Hash type for curl_hash_file, curl_hash_string"}]},"entries":[{"name":"Openssl_Hash_MD5","docStart":0,"docEnd":0,"docs":null,"value":"0"},{"name":"Openssl_Hash_MD4","docStart":0,"docEnd":0,"docs":null,"value":null},{"name":"Openssl_Hash_MD2","docStart":0,"docEnd":0,"docs":null,"value":null},{"name":"Openssl_Hash_SHA","docStart":0,"docEnd":0,"docs":null,"value":null},{"name":"Openssl_Hash_SHA1","docStart":0,"docEnd":0,"docs":null,"value":null},{"name":"Openssl_Hash_SHA224","docStart":0,"docEnd":0,"docs":null,"value":null},{"name":"Openssl_Hash_SHA256","docStart":0,"docEnd":0,"docs":null,"value":null},{"name":"Openssl_Hash_SHA384","docStart":0,"docEnd":0,"docs":null,"value":null},{"name":"Openssl_Hash_SHA512","docStart":0,"docEnd":0,"docs":null,"value":null},{"name":"Openssl_Hash_RIPEMD160","docStart":0,"docEnd":0,"docs":null,"value":null}]}],"typesets":[{"name":"CURL_OnComplete","docStart":3926,"docEnd":4190,"docs":{"brief":"called if curl_easy_perform_thread() or curl_easy_send_recv() Complete","tags":[{"tag":"","text":"called if curl_easy_perform_thread() or curl_easy_send_recv() Complete"}]},"types":[{"docStart":0,"docEnd":0,"docs":null,"type":"function void(Handle hndl, CURLcode code)","parsedSignature":{"returnType":"void","arguments":[{"type":"Handle","name":"hndl","decl":"Handle hndl","default":null},{"type":"CURLcode","name":"code","decl":"CURLcode code","default":null}]}},{"docStart":0,"docEnd":0,"docs":null,"type":"function void(Handle hndl, CURLcode code, any data)","parsedSignature":{"returnType":"void","arguments":[{"type":"Handle","name":"hndl","decl":"Handle hndl","default":null},{"type":"CURLcode","name":"code","decl":"CURLcode code","default":null},{"type":"any","name":"data","decl":"any data","default":null}]}}]},{"name":"CURL_OnSend","docStart":4322,"docEnd":4652,"docs":{"brief":"called if curl_easy_send_recv() before sending data","tags":[{"tag":"","text":"called if curl_easy_send_recv() before sending data"}]},"types":[{"docStart":0,"docEnd":0,"docs":null,"type":"function SendRecv_Act(Handle hndl, CURLcode code, const int last_sent_dataSize)","parsedSignature":{"returnType":"SendRecv_Act","arguments":[{"type":"Handle","name":"hndl","decl":"Handle hndl","default":null},{"type":"CURLcode","name":"code","decl":"CURLcode code","default":null},{"type":"const int","name":"last_sent_dataSize","decl":"const int last_sent_dataSize","default":null}]}},{"docStart":0,"docEnd":0,"docs":null,"type":"function SendRecv_Act(Handle hndl, CURLcode code, const int last_sent_dataSize, any data)","parsedSignature":{"returnType":"SendRecv_Act","arguments":[{"type":"Handle","name":"hndl","decl":"Handle hndl","default":null},{"type":"CURLcode","name":"code","decl":"CURLcode code","default":null},{"type":"const int","name":"last_sent_dataSize","decl":"const int last_sent_dataSize","default":null},{"type":"any","name":"data","decl":"any data","default":null}]}}]},{"name":"CURL_OnReceive","docStart":4854,"docEnd":5160,"docs":{"brief":"called if curl_easy_send_recv() after received data","tags":[{"tag":"","text":"called if curl_easy_send_recv() after received data"}]},"types":[{"docStart":0,"docEnd":0,"docs":null,"type":"function SendRecv_Act(Handle hndl, CURLcode code, const char[] receiveData, const int dataSize)","parsedSignature":{"returnType":"SendRecv_Act","arguments":[{"type":"Handle","name":"hndl","decl":"Handle hndl","default":null},{"type":"CURLcode","name":"code","decl":"CURLcode code","default":null},{"type":"const char[]","name":"receiveData","decl":"const char[] receiveData","default":null},{"type":"const int","name":"dataSize","decl":"const int dataSize","default":null}]}},{"docStart":0,"docEnd":0,"docs":null,"type":"function SendRecv_Act(Handle hndl, CURLcode code, const char[] receiveData, const int dataSize, any data)","parsedSignature":{"returnType":"SendRecv_Act","arguments":[{"type":"Handle","name":"hndl","decl":"Handle hndl","default":null},{"type":"CURLcode","name":"code","decl":"CURLcode code","default":null},{"type":"const char[]","name":"receiveData","decl":"const char[] receiveData","default":null},{"type":"const int","name":"dataSize","decl":"const int dataSize","default":null},{"type":"any","name":"data","decl":"any data","default":null}]}}]},{"name":"Openssl_Hash_Complete","docStart":5397,"docEnd":5639,"docs":{"brief":"called if Openssl_Hash_file() after hashed the file","tags":[{"tag":"","text":"called if Openssl_Hash_file() after hashed the file"}]},"types":[{"docStart":0,"docEnd":0,"docs":null,"type":"function void(const bool success, const char[] buffer)","parsedSignature":{"returnType":"void","arguments":[{"type":"const bool","name":"success","decl":"const bool success","default":null},{"type":"const char[]","name":"buffer","decl":"const char[] buffer","default":null}]}},{"docStart":0,"docEnd":0,"docs":null,"type":"function void(const bool success, const char[] buffer, any data)","parsedSignature":{"returnType":"void","arguments":[{"type":"const bool","name":"success","decl":"const bool success","default":null},{"type":"const char[]","name":"buffer","decl":"const char[] buffer","default":null},{"type":"any","name":"data","decl":"any data","default":null}]}}]},{"name":"CURL_Function_CB","docStart":0,"docEnd":0,"docs":null,"types":[{"docStart":5830,"docEnd":5854,"docs":{"brief":"CURLOPT_WRITEFUNCTION","tags":[{"tag":"","text":"CURLOPT_WRITEFUNCTION"}]},"type":"function void(Handle hndl, const char[] buffer, const int bytes, const int nmemb)","parsedSignature":{"returnType":"void","arguments":[{"type":"Handle","name":"hndl","decl":"Handle hndl","default":null},{"type":"const char[]","name":"buffer","decl":"const char[] buffer","default":null},{"type":"const int","name":"bytes","decl":"const int bytes","default":null},{"type":"const int","name":"nmemb","decl":"const int nmemb","default":null}]}},{"docStart":0,"docEnd":0,"docs":null,"type":"function void(Handle hndl, const char[] buffer, const int bytes, const int nmemb, any data)","parsedSignature":{"returnType":"void","arguments":[{"type":"Handle","name":"hndl","decl":"Handle hndl","default":null},{"type":"const char[]","name":"buffer","decl":"const char[] buffer","default":null},{"type":"const int","name":"bytes","decl":"const int bytes","default":null},{"type":"const int","name":"nmemb","decl":"const int nmemb","default":null},{"type":"any","name":"data","decl":"any data","default":null}]}},{"docStart":6038,"docEnd":6061,"docs":{"brief":"CURLOPT_READFUNCTION","tags":[{"tag":"","text":"CURLOPT_READFUNCTION"}]},"type":"function void(Handle hndl, const int bytes, const int nmemb)","parsedSignature":{"returnType":"void","arguments":[{"type":"Handle","name":"hndl","decl":"Handle hndl","default":null},{"type":"const int","name":"bytes","decl":"const int bytes","default":null},{"type":"const int","name":"nmemb","decl":"const int nmemb","default":null}]}},{"docStart":0,"docEnd":0,"docs":null,"type":"function void(Handle hndl, const int bytes, const int nmemb, any data)","parsedSignature":{"returnType":"void","arguments":[{"type":"Handle","name":"hndl","decl":"Handle hndl","default":null},{"type":"const int","name":"bytes","decl":"const int bytes","default":null},{"type":"const int","name":"nmemb","decl":"const int nmemb","default":null},{"type":"any","name":"data","decl":"any data","default":null}]}}]}],"typedefs":[]}